// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`normalization/doubleShowA: normalization/doubleShowA 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "a": Object {
        "type": "Double/show",
      },
      "b": Object {
        "n": "-0.42",
        "type": "DoubleLit",
      },
      "type": "App",
    },
    "example1": Object {
      "a": Object {
        "type": "Double/show",
      },
      "b": Object {
        "n": "13.37",
        "type": "DoubleLit",
      },
      "type": "App",
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/doubleShowB: normalization/doubleShowB 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "chunks": Array [
        "-",
        "0",
        ".",
        "4",
        "2",
      ],
      "type": "TextLit",
    },
    "example1": Object {
      "chunks": Array [
        "1",
        "3",
        ".",
        "3",
        "7",
      ],
      "type": "TextLit",
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/integerShowA: normalization/integerShowA 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "a": Object {
        "type": "Integer/show",
      },
      "b": Object {
        "integer": "1337",
        "node": "IntegerLit",
      },
      "type": "App",
    },
    "example1": Object {
      "a": Object {
        "type": "Integer/show",
      },
      "b": Object {
        "integer": "-42",
        "node": "IntegerLit",
      },
      "type": "App",
    },
    "example2": Object {
      "a": Object {
        "type": "Integer/show",
      },
      "b": Object {
        "integer": "0",
        "node": "IntegerLit",
      },
      "type": "App",
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/integerShowB: normalization/integerShowB 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "chunks": Array [
        "1",
        "3",
        "3",
        "7",
      ],
      "type": "TextLit",
    },
    "example1": Object {
      "chunks": Array [
        "-",
        "4",
        "2",
      ],
      "type": "TextLit",
    },
    "example2": Object {
      "chunks": Array [
        "0",
      ],
      "type": "TextLit",
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/naturalPlusA: normalization/naturalPlusA 1`] = `
Object {
  "a": Object {
    "n": "1",
    "type": "NaturalLit",
  },
  "b": Object {
    "n": "2",
    "type": "NaturalLit",
  },
  "type": "NaturalPlus",
}
`;

exports[`normalization/naturalPlusB: normalization/naturalPlusB 1`] = `
Object {
  "n": "3",
  "type": "NaturalLit",
}
`;

exports[`normalization/naturalShowA: normalization/naturalShowA 1`] = `
Object {
  "a": Object {
    "type": "Natural/show",
  },
  "b": Object {
    "n": "42",
    "type": "NaturalLit",
  },
  "type": "App",
}
`;

exports[`normalization/naturalShowB: normalization/naturalShowB 1`] = `
Object {
  "chunks": Array [
    "+",
    "4",
    "2",
  ],
  "type": "TextLit",
}
`;

exports[`normalization/naturalToIntegerA: normalization/naturalToIntegerA 1`] = `
Object {
  "a": Object {
    "type": "Natural/toInteger",
  },
  "b": Object {
    "n": "1",
    "type": "NaturalLit",
  },
  "type": "App",
}
`;

exports[`normalization/naturalToIntegerB: normalization/naturalToIntegerB 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`normalization/optionalBuildA: normalization/optionalBuildA 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "a": Object {
        "a": Object {
          "type": "Optional/build",
        },
        "b": Object {
          "type": "Natural",
        },
        "type": "App",
      },
      "b": Object {
        "body": Object {
          "body": Object {
            "body": Object {
              "a": Object {
                "type": "Var",
                "var": Object {
                  "label": "just",
                  "n": 0,
                },
              },
              "b": Object {
                "n": "1",
                "type": "NaturalLit",
              },
              "type": "App",
            },
            "type": "Lambda",
            "var": "nothing",
            "varType": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
          },
          "type": "Lambda",
          "var": "just",
          "varType": Object {
            "a": Object {
              "type": "Natural",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "name": null,
            "type": "Forall",
          },
        },
        "type": "Lambda",
        "var": "optional",
        "varType": Object {
          "type": "Type",
        },
      },
      "type": "App",
    },
    "example1": Object {
      "a": Object {
        "a": Object {
          "type": "Optional/build",
        },
        "b": Object {
          "type": "Integer",
        },
        "type": "App",
      },
      "b": Object {
        "body": Object {
          "body": Object {
            "body": Object {
              "a": Object {
                "type": "Var",
                "var": Object {
                  "label": "x",
                  "n": "1",
                },
              },
              "b": Object {
                "integer": "1",
                "node": "IntegerLit",
              },
              "type": "App",
            },
            "type": "Lambda",
            "var": "x",
            "varType": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
          },
          "type": "Lambda",
          "var": "x",
          "varType": Object {
            "a": Object {
              "type": "Integer",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "name": null,
            "type": "Forall",
          },
        },
        "type": "Lambda",
        "var": "optional",
        "varType": Object {
          "type": "Type",
        },
      },
      "type": "App",
    },
    "example2": Object {
      "body": Object {
        "a": Object {
          "a": Object {
            "type": "Optional/build",
          },
          "b": Object {
            "type": "Bool",
          },
          "type": "App",
        },
        "b": Object {
          "body": Object {
            "body": Object {
              "body": Object {
                "a": Object {
                  "a": Object {
                    "type": "Var",
                    "var": Object {
                      "label": "id",
                      "n": 0,
                    },
                  },
                  "b": Object {
                    "type": "Var",
                    "var": Object {
                      "label": "optional",
                      "n": 0,
                    },
                  },
                  "type": "App",
                },
                "b": Object {
                  "a": Object {
                    "type": "Var",
                    "var": Object {
                      "label": "just",
                      "n": 0,
                    },
                  },
                  "b": Object {
                    "type": "True",
                  },
                  "type": "App",
                },
                "type": "App",
              },
              "type": "Lambda",
              "var": "nothing",
              "varType": Object {
                "type": "Var",
                "var": Object {
                  "label": "optional",
                  "n": 0,
                },
              },
            },
            "type": "Lambda",
            "var": "just",
            "varType": Object {
              "a": Object {
                "type": "Bool",
              },
              "b": Object {
                "type": "Var",
                "var": Object {
                  "label": "optional",
                  "n": 0,
                },
              },
              "name": null,
              "type": "Forall",
            },
          },
          "type": "Lambda",
          "var": "optional",
          "varType": Object {
            "type": "Type",
          },
        },
        "type": "App",
      },
      "type": "Lambda",
      "var": "id",
      "varType": Object {
        "a": Object {
          "type": "Type",
        },
        "b": Object {
          "a": Object {
            "type": "Var",
            "var": Object {
              "label": "a",
              "n": 0,
            },
          },
          "b": Object {
            "type": "Var",
            "var": Object {
              "label": "a",
              "n": 0,
            },
          },
          "name": null,
          "type": "Forall",
        },
        "name": "a",
        "type": "Forall",
      },
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/optionalBuildB: normalization/optionalBuildB 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "type": "Optional",
      "value": Object {
        "n": "1",
        "type": "NaturalLit",
      },
    },
    "example1": Object {
      "type": "Optional",
      "value": Object {
        "integer": "1",
        "node": "IntegerLit",
      },
    },
    "example2": Object {
      "body": Object {
        "a": Object {
          "a": Object {
            "type": "Optional/build",
          },
          "b": Object {
            "type": "Bool",
          },
          "type": "App",
        },
        "b": Object {
          "body": Object {
            "body": Object {
              "body": Object {
                "a": Object {
                  "a": Object {
                    "type": "Var",
                    "var": Object {
                      "label": "id",
                      "n": 0,
                    },
                  },
                  "b": Object {
                    "type": "Var",
                    "var": Object {
                      "label": "optional",
                      "n": 0,
                    },
                  },
                  "type": "App",
                },
                "b": Object {
                  "a": Object {
                    "type": "Var",
                    "var": Object {
                      "label": "just",
                      "n": 0,
                    },
                  },
                  "b": Object {
                    "type": "True",
                  },
                  "type": "App",
                },
                "type": "App",
              },
              "type": "Lambda",
              "var": "nothing",
              "varType": Object {
                "type": "Var",
                "var": Object {
                  "label": "optional",
                  "n": 0,
                },
              },
            },
            "type": "Lambda",
            "var": "just",
            "varType": Object {
              "a": Object {
                "type": "Bool",
              },
              "b": Object {
                "type": "Var",
                "var": Object {
                  "label": "optional",
                  "n": 0,
                },
              },
              "name": null,
              "type": "Forall",
            },
          },
          "type": "Lambda",
          "var": "optional",
          "varType": Object {
            "type": "Type",
          },
        },
        "type": "App",
      },
      "type": "Lambda",
      "var": "id",
      "varType": Object {
        "a": Object {
          "type": "Type",
        },
        "b": Object {
          "a": Object {
            "type": "Var",
            "var": Object {
              "label": "a",
              "n": 0,
            },
          },
          "b": Object {
            "type": "Var",
            "var": Object {
              "label": "a",
              "n": 0,
            },
          },
          "name": null,
          "type": "Forall",
        },
        "name": "a",
        "type": "Forall",
      },
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/optionalBuildFoldA: normalization/optionalBuildFoldA 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "body": Object {
        "a": Object {
          "a": Object {
            "type": "Optional/fold",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "b": Object {
          "a": Object {
            "a": Object {
              "type": "Optional/build",
            },
            "b": Object {
              "type": "Text",
            },
            "type": "App",
          },
          "b": Object {
            "type": "Var",
            "var": Object {
              "label": "f",
              "n": 0,
            },
          },
          "type": "App",
        },
        "type": "App",
      },
      "type": "Lambda",
      "var": "f",
      "varType": Object {
        "a": Object {
          "type": "Type",
        },
        "b": Object {
          "a": Object {
            "a": Object {
              "type": "Text",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "name": null,
            "type": "Forall",
          },
          "b": Object {
            "a": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "name": "nothing",
            "type": "Forall",
          },
          "name": "just",
          "type": "Forall",
        },
        "name": "optional",
        "type": "Forall",
      },
    },
    "example1": Object {
      "a": Object {
        "a": Object {
          "type": "Optional/build",
        },
        "b": Object {
          "type": "Text",
        },
        "type": "App",
      },
      "b": Object {
        "a": Object {
          "a": Object {
            "type": "Optional/fold",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "b": Object {
          "type": "Optional",
          "value": Object {
            "chunks": Array [
              "f",
              "o",
              "o",
            ],
            "type": "TextLit",
          },
        },
        "type": "App",
      },
      "type": "App",
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/optionalBuildFoldB: normalization/optionalBuildFoldB 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "body": Object {
        "type": "Var",
        "var": Object {
          "label": "f",
          "n": 0,
        },
      },
      "type": "Lambda",
      "var": "f",
      "varType": Object {
        "a": Object {
          "type": "Type",
        },
        "b": Object {
          "a": Object {
            "a": Object {
              "type": "Text",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "name": null,
            "type": "Forall",
          },
          "b": Object {
            "a": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "optional",
                "n": 0,
              },
            },
            "name": "nothing",
            "type": "Forall",
          },
          "name": "just",
          "type": "Forall",
        },
        "name": "optional",
        "type": "Forall",
      },
    },
    "example1": Object {
      "type": "Optional",
      "value": Object {
        "chunks": Array [
          "f",
          "o",
          "o",
        ],
        "type": "TextLit",
      },
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/optionalFoldA: normalization/optionalFoldA 1`] = `
Object {
  "body": Object {
    "body": Object {
      "a": Object {
        "a": Object {
          "a": Object {
            "a": Object {
              "a": Object {
                "type": "Optional/fold",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "o",
                "n": 0,
              },
            },
            "type": "App",
          },
          "b": Object {
            "type": "Natural",
          },
          "type": "App",
        },
        "b": Object {
          "body": Object {
            "n": "1",
            "type": "NaturalLit",
          },
          "type": "Lambda",
          "var": "j",
          "varType": Object {
            "type": "Text",
          },
        },
        "type": "App",
      },
      "b": Object {
        "n": "2",
        "type": "NaturalLit",
      },
      "type": "App",
    },
    "type": "Lambda",
    "var": "o",
    "varType": Object {
      "a": Object {
        "type": "Optional",
      },
      "b": Object {
        "type": "Text",
      },
      "type": "App",
    },
  },
  "label": "f",
  "type": "Let",
  "varType": null,
}
`;

exports[`normalization/optionalFoldB: normalization/optionalFoldB 1`] = `
Object {
  "fields": Object {
    "example0": Object {
      "n": "1",
      "type": "NaturalLit",
    },
    "example1": Object {
      "n": "2",
      "type": "NaturalLit",
    },
  },
  "type": "RecordLit",
}
`;

exports[`normalization/remoteSystemsA: normalization/remoteSystemsA 1`] = `
Object {
  "body": Object {
    "import": Object {
      "asText": false,
      "hash": null,
      "req": Object {
        "headers": null,
        "url": "https://ipfs.io/ipfs/QmQ8w5PLcsNz56dMvRtq54vbuPe9cNnCCUXAQp6xLc6Ccx/Prelude/Text/concatMap",
      },
      "type": "http",
    },
    "type": "Import",
  },
  "label": "Text/concatMap",
  "type": "Let",
  "varType": null,
}
`;

exports[`normalization/remoteSystemsB: normalization/remoteSystemsB 1`] = `
Object {
  "body": Object {
    "a": Object {
      "a": Object {
        "a": Object {
          "a": Object {
            "a": Object {
              "type": "List/fold",
            },
            "b": Object {
              "fields": Object {
                "cores": Object {
                  "type": "Natural",
                },
                "host": Object {
                  "type": "Text",
                },
                "key": Object {
                  "type": "Text",
                },
                "mandatoryFeatures": Object {
                  "a": Object {
                    "type": "List",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
                "platforms": Object {
                  "a": Object {
                    "type": "List",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
                "speedFactor": Object {
                  "type": "Natural",
                },
                "supportedFeatures": Object {
                  "a": Object {
                    "type": "List",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
                "user": Object {
                  "a": Object {
                    "type": "Optional",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
              },
              "type": "Record",
            },
            "type": "App",
          },
          "b": Object {
            "type": "Var",
            "var": Object {
              "label": "xs",
              "n": 0,
            },
          },
          "type": "App",
        },
        "b": Object {
          "type": "Text",
        },
        "type": "App",
      },
      "b": Object {
        "body": Object {
          "body": Object {
            "a": Object {
              "chunks": Array [
                Array [
                  "\${",
                  Object {
                    "a": Object {
                      "a": Object {
                        "a": Object {
                          "a": Object {
                            "a": Object {
                              "type": "Optional/fold",
                            },
                            "b": Object {
                              "type": "Text",
                            },
                            "type": "App",
                          },
                          "b": undefined,
                          "type": "App",
                        },
                        "b": Object {
                          "type": "Text",
                        },
                        "type": "App",
                      },
                      "b": Object {
                        "body": Object {
                          "chunks": Array [
                            Array [
                              "\${",
                              Object {
                                "type": "Var",
                                "var": Object {
                                  "label": "user",
                                  "n": 0,
                                },
                              },
                              "}",
                            ],
                            "@",
                            Array [
                              "\${",
                              undefined,
                              "}",
                            ],
                          ],
                          "type": "TextLit",
                        },
                        "type": "Lambda",
                        "var": "user",
                        "varType": Object {
                          "type": "Text",
                        },
                      },
                      "type": "App",
                    },
                    "b": undefined,
                    "type": "App",
                  },
                  "}",
                ],
                " ",
                Array [
                  "\${",
                  Object {
                    "args": Array [
                      Object {
                        "fields": Object {
                          "Empty": Object {
                            "body": Object {
                              "chunks": Array [],
                              "type": "TextLit",
                            },
                            "type": "Lambda",
                            "var": "_",
                            "varType": Object {
                              "fields": Object {},
                              "type": "Record",
                            },
                          },
                          "NonEmpty": Object {
                            "body": Object {
                              "type": "Var",
                              "var": Object {
                                "label": "result",
                                "n": 0,
                              },
                            },
                            "type": "Lambda",
                            "var": "result",
                            "varType": Object {
                              "type": "Text",
                            },
                          },
                        },
                        "type": "RecordLit",
                      },
                      Object {
                        "a": Object {
                          "a": Object {
                            "a": Object {
                              "a": Object {
                                "a": Object {
                                  "type": "List/fold",
                                },
                                "b": Object {
                                  "type": "Text",
                                },
                                "type": "App",
                              },
                              "b": undefined,
                              "type": "App",
                            },
                            "b": Object {
                              "alts": Object {
                                "Empty": Object {
                                  "fields": Object {},
                                  "type": "Record",
                                },
                              },
                              "type": "Union",
                            },
                            "type": "App",
                          },
                          "b": Object {
                            "body": Object {
                              "body": Object {
                                "args": Array [
                                  Object {
                                    "fields": Object {
                                      "Empty": Object {
                                        "body": Object {
                                          "alts": Object {
                                            "Empty": Object {
                                              "fields": Object {},
                                              "type": "Record",
                                            },
                                          },
                                          "choice": Object {
                                            "expr": Object {
                                              "type": "Var",
                                              "var": Object {
                                                "label": "element",
                                                "n": 0,
                                              },
                                            },
                                            "name": "NonEmpty",
                                          },
                                          "type": "UnionLit",
                                        },
                                        "type": "Lambda",
                                        "var": "_",
                                        "varType": Object {
                                          "fields": Object {},
                                          "type": "Record",
                                        },
                                      },
                                      "NonEmpty": Object {
                                        "body": Object {
                                          "alts": Object {
                                            "Empty": Object {
                                              "fields": Object {},
                                              "type": "Record",
                                            },
                                          },
                                          "choice": Object {
                                            "expr": Object {
                                              "a": Object {
                                                "a": Object {
                                                  "type": "Var",
                                                  "var": Object {
                                                    "label": "element",
                                                    "n": 0,
                                                  },
                                                },
                                                "b": Object {
                                                  "chunks": Array [
                                                    ",",
                                                  ],
                                                  "type": "TextLit",
                                                },
                                                "type": "TextAppend",
                                              },
                                              "b": Object {
                                                "type": "Var",
                                                "var": Object {
                                                  "label": "result",
                                                  "n": 0,
                                                },
                                              },
                                              "type": "TextAppend",
                                            },
                                            "name": "NonEmpty",
                                          },
                                          "type": "UnionLit",
                                        },
                                        "type": "Lambda",
                                        "var": "result",
                                        "varType": Object {
                                          "type": "Text",
                                        },
                                      },
                                    },
                                    "type": "RecordLit",
                                  },
                                  Object {
                                    "type": "Var",
                                    "var": Object {
                                      "label": "status",
                                      "n": 0,
                                    },
                                  },
                                ],
                                "type": "Merge",
                              },
                              "type": "Lambda",
                              "var": "status",
                              "varType": Object {
                                "alts": Object {
                                  "Empty": Object {
                                    "fields": Object {},
                                    "type": "Record",
                                  },
                                },
                                "type": "Union",
                              },
                            },
                            "type": "Lambda",
                            "var": "element",
                            "varType": Object {
                              "type": "Text",
                            },
                          },
                          "type": "App",
                        },
                        "b": Object {
                          "alts": Object {
                            "NonEmpty": Object {
                              "type": "Text",
                            },
                          },
                          "choice": Object {
                            "expr": Object {
                              "fields": Object {},
                              "type": "RecordLit",
                            },
                            "name": "Empty",
                          },
                          "type": "UnionLit",
                        },
                        "type": "App",
                      },
                    ],
                    "type": "Merge",
                  },
                  "}",
                ],
                " ",
                Array [
                  "\${",
                  undefined,
                  "}",
                ],
                " ",
                Array [
                  "\${",
                  Object {
                    "a": Object {
                      "type": "Integer/show",
                    },
                    "b": Object {
                      "a": Object {
                        "type": "Natural/toInteger",
                      },
                      "b": undefined,
                      "type": "App",
                    },
                    "type": "App",
                  },
                  "}",
                ],
                " ",
                Array [
                  "\${",
                  Object {
                    "a": Object {
                      "type": "Integer/show",
                    },
                    "b": Object {
                      "a": Object {
                        "type": "Natural/toInteger",
                      },
                      "b": undefined,
                      "type": "App",
                    },
                    "type": "App",
                  },
                  "}",
                ],
                " ",
                Array [
                  "\${",
                  Object {
                    "args": Array [
                      Object {
                        "fields": Object {
                          "Empty": Object {
                            "body": Object {
                              "chunks": Array [],
                              "type": "TextLit",
                            },
                            "type": "Lambda",
                            "var": "_",
                            "varType": Object {
                              "fields": Object {},
                              "type": "Record",
                            },
                          },
                          "NonEmpty": Object {
                            "body": Object {
                              "type": "Var",
                              "var": Object {
                                "label": "result",
                                "n": 0,
                              },
                            },
                            "type": "Lambda",
                            "var": "result",
                            "varType": Object {
                              "type": "Text",
                            },
                          },
                        },
                        "type": "RecordLit",
                      },
                      Object {
                        "a": Object {
                          "a": Object {
                            "a": Object {
                              "a": Object {
                                "a": Object {
                                  "type": "List/fold",
                                },
                                "b": Object {
                                  "type": "Text",
                                },
                                "type": "App",
                              },
                              "b": undefined,
                              "type": "App",
                            },
                            "b": Object {
                              "alts": Object {
                                "Empty": Object {
                                  "fields": Object {},
                                  "type": "Record",
                                },
                              },
                              "type": "Union",
                            },
                            "type": "App",
                          },
                          "b": Object {
                            "body": Object {
                              "body": Object {
                                "args": Array [
                                  Object {
                                    "fields": Object {
                                      "Empty": Object {
                                        "body": Object {
                                          "alts": Object {
                                            "Empty": Object {
                                              "fields": Object {},
                                              "type": "Record",
                                            },
                                          },
                                          "choice": Object {
                                            "expr": Object {
                                              "type": "Var",
                                              "var": Object {
                                                "label": "element",
                                                "n": 0,
                                              },
                                            },
                                            "name": "NonEmpty",
                                          },
                                          "type": "UnionLit",
                                        },
                                        "type": "Lambda",
                                        "var": "_",
                                        "varType": Object {
                                          "fields": Object {},
                                          "type": "Record",
                                        },
                                      },
                                      "NonEmpty": Object {
                                        "body": Object {
                                          "alts": Object {
                                            "Empty": Object {
                                              "fields": Object {},
                                              "type": "Record",
                                            },
                                          },
                                          "choice": Object {
                                            "expr": Object {
                                              "a": Object {
                                                "a": Object {
                                                  "type": "Var",
                                                  "var": Object {
                                                    "label": "element",
                                                    "n": 0,
                                                  },
                                                },
                                                "b": Object {
                                                  "chunks": Array [
                                                    ",",
                                                  ],
                                                  "type": "TextLit",
                                                },
                                                "type": "TextAppend",
                                              },
                                              "b": Object {
                                                "type": "Var",
                                                "var": Object {
                                                  "label": "result",
                                                  "n": 0,
                                                },
                                              },
                                              "type": "TextAppend",
                                            },
                                            "name": "NonEmpty",
                                          },
                                          "type": "UnionLit",
                                        },
                                        "type": "Lambda",
                                        "var": "result",
                                        "varType": Object {
                                          "type": "Text",
                                        },
                                      },
                                    },
                                    "type": "RecordLit",
                                  },
                                  Object {
                                    "type": "Var",
                                    "var": Object {
                                      "label": "status",
                                      "n": 0,
                                    },
                                  },
                                ],
                                "type": "Merge",
                              },
                              "type": "Lambda",
                              "var": "status",
                              "varType": Object {
                                "alts": Object {
                                  "Empty": Object {
                                    "fields": Object {},
                                    "type": "Record",
                                  },
                                },
                                "type": "Union",
                              },
                            },
                            "type": "Lambda",
                            "var": "element",
                            "varType": Object {
                              "type": "Text",
                            },
                          },
                          "type": "App",
                        },
                        "b": Object {
                          "alts": Object {
                            "NonEmpty": Object {
                              "type": "Text",
                            },
                          },
                          "choice": Object {
                            "expr": Object {
                              "fields": Object {},
                              "type": "RecordLit",
                            },
                            "name": "Empty",
                          },
                          "type": "UnionLit",
                        },
                        "type": "App",
                      },
                    ],
                    "type": "Merge",
                  },
                  "}",
                ],
                " ",
                Array [
                  "\${",
                  Object {
                    "args": Array [
                      Object {
                        "fields": Object {
                          "Empty": Object {
                            "body": Object {
                              "chunks": Array [],
                              "type": "TextLit",
                            },
                            "type": "Lambda",
                            "var": "_",
                            "varType": Object {
                              "fields": Object {},
                              "type": "Record",
                            },
                          },
                          "NonEmpty": Object {
                            "body": Object {
                              "type": "Var",
                              "var": Object {
                                "label": "result",
                                "n": 0,
                              },
                            },
                            "type": "Lambda",
                            "var": "result",
                            "varType": Object {
                              "type": "Text",
                            },
                          },
                        },
                        "type": "RecordLit",
                      },
                      Object {
                        "a": Object {
                          "a": Object {
                            "a": Object {
                              "a": Object {
                                "a": Object {
                                  "type": "List/fold",
                                },
                                "b": Object {
                                  "type": "Text",
                                },
                                "type": "App",
                              },
                              "b": undefined,
                              "type": "App",
                            },
                            "b": Object {
                              "alts": Object {
                                "Empty": Object {
                                  "fields": Object {},
                                  "type": "Record",
                                },
                              },
                              "type": "Union",
                            },
                            "type": "App",
                          },
                          "b": Object {
                            "body": Object {
                              "body": Object {
                                "args": Array [
                                  Object {
                                    "fields": Object {
                                      "Empty": Object {
                                        "body": Object {
                                          "alts": Object {
                                            "Empty": Object {
                                              "fields": Object {},
                                              "type": "Record",
                                            },
                                          },
                                          "choice": Object {
                                            "expr": Object {
                                              "type": "Var",
                                              "var": Object {
                                                "label": "element",
                                                "n": 0,
                                              },
                                            },
                                            "name": "NonEmpty",
                                          },
                                          "type": "UnionLit",
                                        },
                                        "type": "Lambda",
                                        "var": "_",
                                        "varType": Object {
                                          "fields": Object {},
                                          "type": "Record",
                                        },
                                      },
                                      "NonEmpty": Object {
                                        "body": Object {
                                          "alts": Object {
                                            "Empty": Object {
                                              "fields": Object {},
                                              "type": "Record",
                                            },
                                          },
                                          "choice": Object {
                                            "expr": Object {
                                              "a": Object {
                                                "a": Object {
                                                  "type": "Var",
                                                  "var": Object {
                                                    "label": "element",
                                                    "n": 0,
                                                  },
                                                },
                                                "b": Object {
                                                  "chunks": Array [
                                                    ",",
                                                  ],
                                                  "type": "TextLit",
                                                },
                                                "type": "TextAppend",
                                              },
                                              "b": Object {
                                                "type": "Var",
                                                "var": Object {
                                                  "label": "result",
                                                  "n": 0,
                                                },
                                              },
                                              "type": "TextAppend",
                                            },
                                            "name": "NonEmpty",
                                          },
                                          "type": "UnionLit",
                                        },
                                        "type": "Lambda",
                                        "var": "result",
                                        "varType": Object {
                                          "type": "Text",
                                        },
                                      },
                                    },
                                    "type": "RecordLit",
                                  },
                                  Object {
                                    "type": "Var",
                                    "var": Object {
                                      "label": "status",
                                      "n": 0,
                                    },
                                  },
                                ],
                                "type": "Merge",
                              },
                              "type": "Lambda",
                              "var": "status",
                              "varType": Object {
                                "alts": Object {
                                  "Empty": Object {
                                    "fields": Object {},
                                    "type": "Record",
                                  },
                                },
                                "type": "Union",
                              },
                            },
                            "type": "Lambda",
                            "var": "element",
                            "varType": Object {
                              "type": "Text",
                            },
                          },
                          "type": "App",
                        },
                        "b": Object {
                          "alts": Object {
                            "NonEmpty": Object {
                              "type": "Text",
                            },
                          },
                          "choice": Object {
                            "expr": Object {
                              "fields": Object {},
                              "type": "RecordLit",
                            },
                            "name": "Empty",
                          },
                          "type": "UnionLit",
                        },
                        "type": "App",
                      },
                    ],
                    "type": "Merge",
                  },
                  "}",
                ],
                Array [
                  "\\\\",
                  "n",
                ],
              ],
              "type": "TextLit",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "y",
                "n": 0,
              },
            },
            "type": "TextAppend",
          },
          "type": "Lambda",
          "var": "y",
          "varType": Object {
            "type": "Text",
          },
        },
        "type": "Lambda",
        "var": "x",
        "varType": Object {
          "fields": Object {
            "cores": Object {
              "type": "Natural",
            },
            "host": Object {
              "type": "Text",
            },
            "key": Object {
              "type": "Text",
            },
            "mandatoryFeatures": Object {
              "a": Object {
                "type": "List",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
            "platforms": Object {
              "a": Object {
                "type": "List",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
            "speedFactor": Object {
              "type": "Natural",
            },
            "supportedFeatures": Object {
              "a": Object {
                "type": "List",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
            "user": Object {
              "a": Object {
                "type": "Optional",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
          },
          "type": "Record",
        },
      },
      "type": "App",
    },
    "b": Object {
      "chunks": Array [],
      "type": "TextLit",
    },
    "type": "App",
  },
  "type": "Lambda",
  "var": "xs",
  "varType": Object {
    "a": Object {
      "type": "List",
    },
    "b": Object {
      "fields": Object {
        "cores": Object {
          "type": "Natural",
        },
        "host": Object {
          "type": "Text",
        },
        "key": Object {
          "type": "Text",
        },
        "mandatoryFeatures": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "platforms": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "speedFactor": Object {
          "type": "Natural",
        },
        "supportedFeatures": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "user": Object {
          "a": Object {
            "type": "Optional",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
      },
      "type": "Record",
    },
    "type": "App",
  },
}
`;

exports[`parser/annotations: parser/annotations 1`] = `
Object {
  "expr": Object {
    "fields": Object {
      "bar": Object {
        "type": "Optional",
        "value": null,
      },
      "baz": Object {
        "type": "Optional",
        "value": Object {
          "integer": "1",
          "node": "IntegerLit",
        },
      },
      "foo": Object {
        "a": Object {
          "a": Object {
            "list": Array [],
            "type": "ListLit",
          },
          "b": Object {
            "list": Array [
              Object {
                "integer": "1",
                "node": "IntegerLit",
              },
              Object {
                "integer": "2",
                "node": "IntegerLit",
              },
              Object {
                "integer": "3",
                "node": "IntegerLit",
              },
            ],
            "type": "ListLit",
          },
          "type": "ListAppend",
        },
        "b": Object {
          "expr": Object {
            "list": Array [
              Object {
                "integer": "1",
                "node": "IntegerLit",
              },
              Object {
                "integer": "2",
                "node": "IntegerLit",
              },
              Object {
                "integer": "3",
                "node": "IntegerLit",
              },
            ],
            "type": "ListLit",
          },
          "node": "annotate",
          "type": Object {
            "a": Object {
              "type": "List",
            },
            "b": Object {
              "type": "Integer",
            },
            "type": "App",
          },
        },
        "type": "ListAppend",
      },
    },
    "type": "RecordLit",
  },
  "node": "annotate",
  "type": Object {
    "fields": Object {
      "bar": Object {
        "a": Object {
          "type": "Optional",
        },
        "b": Object {
          "type": "Integer",
        },
        "type": "App",
      },
      "baz": Object {
        "a": Object {
          "type": "Optional",
        },
        "b": Object {
          "type": "Integer",
        },
        "type": "App",
      },
      "foo": Object {
        "a": Object {
          "type": "List",
        },
        "b": Object {
          "type": "Integer",
        },
        "type": "App",
      },
    },
    "type": "Record",
  },
}
`;

exports[`parser/blockComment: parser/blockComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/builtins: parser/builtins 1`] = `
Object {
  "body": Object {
    "fields": Object {
      "field00": Object {
        "type": "Natural/fold",
      },
      "field01": Object {
        "type": "Natural/build",
      },
      "field02": Object {
        "type": "Natural/isZero",
      },
      "field03": Object {
        "type": "Natural/even",
      },
      "field04": Object {
        "type": "Natural/odd",
      },
      "field05": Object {
        "type": "Natural/toInteger",
      },
      "field06": Object {
        "type": "Natural/show",
      },
      "field07": Object {
        "type": "Integer/show",
      },
      "field08": Object {
        "type": "Double/show",
      },
      "field09": Object {
        "type": "List/build",
      },
      "field10": Object {
        "type": "List/fold",
      },
      "field11": Object {
        "type": "List/length",
      },
      "field12": Object {
        "type": "List/head",
      },
      "field13": Object {
        "type": "List/last",
      },
      "field14": Object {
        "type": "List/indexed",
      },
      "field15": Object {
        "type": "List/reverse",
      },
      "field16": Object {
        "type": "Optional/fold",
      },
      "field17": Object {
        "type": "Optional/build",
      },
      "field18": Object {
        "type": "True",
      },
      "field19": Object {
        "type": "False",
      },
    },
    "type": "RecordLit",
  },
  "type": "Lambda",
  "var": "x",
  "varType": Object {
    "fields": Object {
      "field0": Object {
        "type": "Bool",
      },
      "field1": Object {
        "a": Object {
          "type": "Optional",
        },
        "b": Object {
          "a": Object {
            "type": "Optional",
          },
          "b": Object {
            "type": "Bool",
          },
          "type": "App",
        },
        "type": "App",
      },
      "field2": Object {
        "type": "Natural",
      },
      "field3": Object {
        "type": "Integer",
      },
      "field4": Object {
        "type": "Double",
      },
      "field5": Object {
        "type": "Text",
      },
      "field6": Object {
        "a": Object {
          "type": "List",
        },
        "b": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "type": "Bool",
          },
          "type": "App",
        },
        "type": "App",
      },
    },
    "type": "Record",
  },
}
`;

exports[`parser/constructors: parser/constructors 1`] = `
Object {
  "expr": Object {
    "alts": Object {
      "Left": Object {
        "type": "Natural",
      },
    },
    "type": "Union",
  },
  "node": "constructors",
}
`;

exports[`parser/double: parser/double 1`] = `
Object {
  "list": Array [
    Object {
      "n": "1.1",
      "type": "DoubleLit",
    },
    Object {
      "n": "-1.1",
      "type": "DoubleLit",
    },
    Object {
      "n": "1e,,1",
      "type": "DoubleLit",
    },
    Object {
      "n": "1.1",
      "type": "DoubleLit",
    },
    Object {
      "n": "-1.1",
      "type": "DoubleLit",
    },
  ],
  "type": "ListLit",
}
`;

exports[`parser/doubleQuotedString: parser/doubleQuotedString 1`] = `
Object {
  "chunks": Array [
    "A",
    "B",
    "C",
  ],
  "type": "TextLit",
}
`;

exports[`parser/environmentVariables: parser/environmentVariables 1`] = `
Object {
  "list": Array [
    Object {
      "import": Object {
        "asText": false,
        "env": "FOO",
        "hash": null,
        "type": "env",
      },
      "type": "Import",
    },
    Object {
      "import": Object {
        "asText": false,
        "env": "\\"\\\\\\"\\\\\\\\\\\\a\\\\b\\\\f\\\\n\\\\r\\\\t\\\\v\\"",
        "hash": null,
        "type": "env",
      },
      "type": "Import",
    },
  ],
  "type": "ListLit",
}
`;

exports[`parser/escapedDoubleQuotedString: parser/escapedDoubleQuotedString 1`] = `
Object {
  "chunks": Array [
    Array [
      "\\\\",
      "\\\\",
    ],
    Array [
      "\\\\",
      "\\"",
    ],
    Array [
      "\\\\",
      "$",
    ],
    Array [
      "\\\\",
      "\\\\",
    ],
    Array [
      "\\\\",
      "/",
    ],
    Array [
      "\\\\",
      "b",
    ],
    Array [
      "\\\\",
      "f",
    ],
    Array [
      "\\\\",
      "n",
    ],
    Array [
      "\\\\",
      "r",
    ],
    Array [
      "\\\\",
      "t",
    ],
    " ",
    Array [
      "\\\\",
      "u",
    ],
    "2",
    "2",
    "0",
    "0",
    "(",
    "a",
    " ",
    ":",
    " ",
    "T",
    "y",
    "p",
    "e",
    ")",
    " ",
    Array [
      "\\\\",
      "u",
    ],
    "2",
    "1",
    "9",
    "2",
    " ",
    "a",
  ],
  "type": "TextLit",
}
`;

exports[`parser/escapedSingleQuotedString: parser/escapedSingleQuotedString 1`] = `
Array [
  "''",
  Array [
    "
",
    Array [
      "''\${",
      Array [
        "
",
        Array [
          "'''",
          Array [
            "
",
            "''",
          ],
        ],
      ],
    ],
  ],
]
`;

exports[`parser/fields: parser/fields 1`] = `undefined`;

exports[`parser/forall: parser/forall 1`] = `
Object {
  "a": Object {
    "type": "Type",
  },
  "b": Object {
    "a": Object {
      "type": "Type",
    },
    "b": Object {
      "type": "Var",
      "var": Object {
        "label": "a",
        "n": 0,
      },
    },
    "name": "b",
    "type": "Forall",
  },
  "name": "a",
  "type": "Forall",
}
`;

exports[`parser/functionType: parser/functionType 1`] = `
Object {
  "a": Object {
    "type": "Bool",
  },
  "b": Object {
    "a": Object {
      "type": "Bool",
    },
    "b": Object {
      "type": "Bool",
    },
    "name": null,
    "type": "Forall",
  },
  "name": null,
  "type": "Forall",
}
`;

exports[`parser/identifier: parser/identifier 1`] = `
Object {
  "body": Object {
    "body": Object {
      "type": "Var",
      "var": Object {
        "label": "a",
        "n": "1",
      },
    },
    "type": "Lambda",
    "var": "a",
    "varType": Object {
      "type": "Type",
    },
  },
  "type": "Lambda",
  "var": "a",
  "varType": Object {
    "type": "Type",
  },
}
`;

exports[`parser/ifThenElse: parser/ifThenElse 1`] = `
Object {
  "false": Object {
    "integer": "2",
    "node": "IntegerLit",
  },
  "node": "if",
  "predicate": Object {
    "type": "True",
  },
  "true": Object {
    "integer": "1",
    "node": "IntegerLit",
  },
}
`;

exports[`parser/interpolatedDoubleQuotedString: parser/interpolatedDoubleQuotedString 1`] = `
Object {
  "chunks": Array [
    "A",
    "B",
    "C",
    Array [
      "\${",
      Object {
        "a": Object {
          "type": "Integer/show",
        },
        "b": Object {
          "integer": "123",
          "node": "IntegerLit",
        },
        "type": "App",
      },
      "}",
    ],
  ],
  "type": "TextLit",
}
`;

exports[`parser/interpolatedSingleQuotedString: parser/interpolatedSingleQuotedString 1`] = `
Array [
  "''",
  Array [
    "
",
    Array [
      "A",
      Array [
        "B",
        Array [
          "C",
          Array [
            "
",
            Array [
              "\${",
              Object {
                "a": Object {
                  "type": "Integer/show",
                },
                "b": Object {
                  "integer": "123",
                  "node": "IntegerLit",
                },
                "type": "App",
              },
              "}",
              Array [
                "
",
                "''",
              ],
            ],
          ],
        ],
      ],
    ],
  ],
]
`;

exports[`parser/label: parser/label 1`] = `
Object {
  "body": Object {
    "integer": "1",
    "node": "IntegerLit",
  },
  "label": "_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-/",
  "type": "Let",
  "varType": null,
}
`;

exports[`parser/lambda: parser/lambda 1`] = `
Object {
  "body": Object {
    "body": Object {
      "type": "Var",
      "var": Object {
        "label": "a",
        "n": 0,
      },
    },
    "type": "Lambda",
    "var": "b",
    "varType": Object {
      "type": "Type",
    },
  },
  "type": "Lambda",
  "var": "a",
  "varType": Object {
    "type": "Type",
  },
}
`;

exports[`parser/largeExpression: parser/largeExpression 1`] = `
Object {
  "body": Object {
    "a": Object {
      "a": Object {
        "a": Object {
          "a": Object {
            "a": Object {
              "type": "List/fold",
            },
            "b": Object {
              "fields": Object {
                "cores": Object {
                  "type": "Natural",
                },
                "host": Object {
                  "type": "Text",
                },
                "key": Object {
                  "type": "Text",
                },
                "mandatoryFeatures": Object {
                  "a": Object {
                    "type": "List",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
                "platforms": Object {
                  "a": Object {
                    "type": "List",
                  },
                  "b": Object {
                    "alts": Object {
                      "AArch64_Linux": Object {
                        "fields": Object {},
                        "type": "Record",
                      },
                    },
                    "type": "Union",
                  },
                  "type": "App",
                },
                "speedFactor": Object {
                  "type": "Natural",
                },
                "supportedFeatures": Object {
                  "a": Object {
                    "type": "List",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
                "user": Object {
                  "a": Object {
                    "type": "Optional",
                  },
                  "b": Object {
                    "type": "Text",
                  },
                  "type": "App",
                },
              },
              "type": "Record",
            },
            "type": "App",
          },
          "b": Object {
            "type": "Var",
            "var": Object {
              "label": "xs",
              "n": 0,
            },
          },
          "type": "App",
        },
        "b": Object {
          "type": "Text",
        },
        "type": "App",
      },
      "b": Object {
        "body": Object {
          "body": Object {
            "a": Object {
              "a": Object {
                "a": Object {
                  "a": Object {
                    "a": Object {
                      "a": Object {
                        "a": Object {
                          "a": Object {
                            "a": Object {
                              "a": Object {
                                "a": Object {
                                  "a": Object {
                                    "a": Object {
                                      "a": Object {
                                        "a": Object {
                                          "a": Object {
                                            "a": Object {
                                              "a": Object {
                                                "a": Object {
                                                  "type": "Optional/fold",
                                                },
                                                "b": Object {
                                                  "type": "Text",
                                                },
                                                "type": "App",
                                              },
                                              "b": undefined,
                                              "type": "App",
                                            },
                                            "b": Object {
                                              "type": "Text",
                                            },
                                            "type": "App",
                                          },
                                          "b": Object {
                                            "body": Object {
                                              "a": Object {
                                                "a": Object {
                                                  "a": Object {
                                                    "type": "Var",
                                                    "var": Object {
                                                      "label": "user",
                                                      "n": 0,
                                                    },
                                                  },
                                                  "b": Object {
                                                    "chunks": Array [
                                                      "@",
                                                    ],
                                                    "type": "TextLit",
                                                  },
                                                  "type": "TextAppend",
                                                },
                                                "b": undefined,
                                                "type": "TextAppend",
                                              },
                                              "b": Object {
                                                "chunks": Array [],
                                                "type": "TextLit",
                                              },
                                              "type": "TextAppend",
                                            },
                                            "type": "Lambda",
                                            "var": "user",
                                            "varType": Object {
                                              "type": "Text",
                                            },
                                          },
                                          "type": "App",
                                        },
                                        "b": undefined,
                                        "type": "App",
                                      },
                                      "b": Object {
                                        "chunks": Array [
                                          " ",
                                        ],
                                        "type": "TextLit",
                                      },
                                      "type": "TextAppend",
                                    },
                                    "b": Object {
                                      "args": Array [
                                        Object {
                                          "fields": Object {
                                            "Empty": Object {
                                              "body": Object {
                                                "chunks": Array [],
                                                "type": "TextLit",
                                              },
                                              "type": "Lambda",
                                              "var": "_",
                                              "varType": Object {
                                                "fields": Object {},
                                                "type": "Record",
                                              },
                                            },
                                            "NonEmpty": Object {
                                              "body": Object {
                                                "type": "Var",
                                                "var": Object {
                                                  "label": "result",
                                                  "n": 0,
                                                },
                                              },
                                              "type": "Lambda",
                                              "var": "result",
                                              "varType": Object {
                                                "type": "Text",
                                              },
                                            },
                                          },
                                          "type": "RecordLit",
                                        },
                                        Object {
                                          "a": Object {
                                            "a": Object {
                                              "a": Object {
                                                "a": Object {
                                                  "a": Object {
                                                    "type": "List/fold",
                                                  },
                                                  "b": Object {
                                                    "alts": Object {
                                                      "AArch64_Linux": Object {
                                                        "fields": Object {},
                                                        "type": "Record",
                                                      },
                                                    },
                                                    "type": "Union",
                                                  },
                                                  "type": "App",
                                                },
                                                "b": undefined,
                                                "type": "App",
                                              },
                                              "b": Object {
                                                "alts": Object {
                                                  "Empty": Object {
                                                    "fields": Object {},
                                                    "type": "Record",
                                                  },
                                                },
                                                "type": "Union",
                                              },
                                              "type": "App",
                                            },
                                            "b": Object {
                                              "body": Object {
                                                "body": Object {
                                                  "args": Array [
                                                    Object {
                                                      "fields": Object {
                                                        "Empty": Object {
                                                          "body": Object {
                                                            "alts": Object {
                                                              "Empty": Object {
                                                                "fields": Object {},
                                                                "type": "Record",
                                                              },
                                                            },
                                                            "choice": Object {
                                                              "expr": Object {
                                                                "args": Array [
                                                                  Object {
                                                                    "fields": Object {
                                                                      "AArch64_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "a",
                                                                            "a",
                                                                            "r",
                                                                            "c",
                                                                            "h",
                                                                            "6",
                                                                            "4",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "ARMv5tel_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "a",
                                                                            "r",
                                                                            "m",
                                                                            "v",
                                                                            "5",
                                                                            "t",
                                                                            "e",
                                                                            "l",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "ARMv7l_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "a",
                                                                            "r",
                                                                            "m",
                                                                            "v",
                                                                            "7",
                                                                            "l",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "I686_Cygwin": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "i",
                                                                            "6",
                                                                            "8",
                                                                            "6",
                                                                            "-",
                                                                            "c",
                                                                            "y",
                                                                            "g",
                                                                            "w",
                                                                            "i",
                                                                            "n",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "I686_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "i",
                                                                            "6",
                                                                            "8",
                                                                            "6",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "MIPS64el_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "m",
                                                                            "i",
                                                                            "p",
                                                                            "s",
                                                                            "6",
                                                                            "4",
                                                                            "e",
                                                                            "l",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "PowerPC_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "p",
                                                                            "o",
                                                                            "w",
                                                                            "e",
                                                                            "r",
                                                                            "p",
                                                                            "c",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "X86_64_Cygwin": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "x",
                                                                            "8",
                                                                            "6",
                                                                            "_",
                                                                            "6",
                                                                            "4",
                                                                            "-",
                                                                            "c",
                                                                            "y",
                                                                            "g",
                                                                            "w",
                                                                            "i",
                                                                            "n",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "X86_64_Darwin": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "x",
                                                                            "8",
                                                                            "6",
                                                                            "_",
                                                                            "6",
                                                                            "4",
                                                                            "-",
                                                                            "d",
                                                                            "a",
                                                                            "r",
                                                                            "w",
                                                                            "i",
                                                                            "n",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "X86_64_FreeBSD": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "x",
                                                                            "8",
                                                                            "6",
                                                                            "_",
                                                                            "6",
                                                                            "4",
                                                                            "-",
                                                                            "f",
                                                                            "r",
                                                                            "e",
                                                                            "e",
                                                                            "b",
                                                                            "s",
                                                                            "d",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "X86_64_Linux": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "x",
                                                                            "8",
                                                                            "6",
                                                                            "_",
                                                                            "6",
                                                                            "4",
                                                                            "-",
                                                                            "l",
                                                                            "i",
                                                                            "n",
                                                                            "u",
                                                                            "x",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                      "X86_64_Solaris": Object {
                                                                        "body": Object {
                                                                          "chunks": Array [
                                                                            "x",
                                                                            "8",
                                                                            "6",
                                                                            "_",
                                                                            "6",
                                                                            "4",
                                                                            "-",
                                                                            "s",
                                                                            "o",
                                                                            "l",
                                                                            "a",
                                                                            "r",
                                                                            "i",
                                                                            "s",
                                                                          ],
                                                                          "type": "TextLit",
                                                                        },
                                                                        "type": "Lambda",
                                                                        "var": "_",
                                                                        "varType": Object {
                                                                          "fields": Object {},
                                                                          "type": "Record",
                                                                        },
                                                                      },
                                                                    },
                                                                    "type": "RecordLit",
                                                                  },
                                                                  Object {
                                                                    "type": "Var",
                                                                    "var": Object {
                                                                      "label": "element",
                                                                      "n": 0,
                                                                    },
                                                                  },
                                                                ],
                                                                "type": "Merge",
                                                              },
                                                              "name": "NonEmpty",
                                                            },
                                                            "type": "UnionLit",
                                                          },
                                                          "type": "Lambda",
                                                          "var": "_",
                                                          "varType": Object {
                                                            "fields": Object {},
                                                            "type": "Record",
                                                          },
                                                        },
                                                        "NonEmpty": Object {
                                                          "body": Object {
                                                            "alts": Object {
                                                              "Empty": Object {
                                                                "fields": Object {},
                                                                "type": "Record",
                                                              },
                                                            },
                                                            "choice": Object {
                                                              "expr": Object {
                                                                "a": Object {
                                                                  "a": Object {
                                                                    "args": Array [
                                                                      Object {
                                                                        "fields": Object {
                                                                          "AArch64_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "a",
                                                                                "a",
                                                                                "r",
                                                                                "c",
                                                                                "h",
                                                                                "6",
                                                                                "4",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "ARMv5tel_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "a",
                                                                                "r",
                                                                                "m",
                                                                                "v",
                                                                                "5",
                                                                                "t",
                                                                                "e",
                                                                                "l",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "ARMv7l_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "a",
                                                                                "r",
                                                                                "m",
                                                                                "v",
                                                                                "7",
                                                                                "l",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "I686_Cygwin": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "i",
                                                                                "6",
                                                                                "8",
                                                                                "6",
                                                                                "-",
                                                                                "c",
                                                                                "y",
                                                                                "g",
                                                                                "w",
                                                                                "i",
                                                                                "n",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "I686_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "i",
                                                                                "6",
                                                                                "8",
                                                                                "6",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "MIPS64el_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "m",
                                                                                "i",
                                                                                "p",
                                                                                "s",
                                                                                "6",
                                                                                "4",
                                                                                "e",
                                                                                "l",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "PowerPC_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "p",
                                                                                "o",
                                                                                "w",
                                                                                "e",
                                                                                "r",
                                                                                "p",
                                                                                "c",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "X86_64_Cygwin": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "x",
                                                                                "8",
                                                                                "6",
                                                                                "_",
                                                                                "6",
                                                                                "4",
                                                                                "-",
                                                                                "c",
                                                                                "y",
                                                                                "g",
                                                                                "w",
                                                                                "i",
                                                                                "n",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "X86_64_Darwin": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "x",
                                                                                "8",
                                                                                "6",
                                                                                "_",
                                                                                "6",
                                                                                "4",
                                                                                "-",
                                                                                "d",
                                                                                "a",
                                                                                "r",
                                                                                "w",
                                                                                "i",
                                                                                "n",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "X86_64_FreeBSD": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "x",
                                                                                "8",
                                                                                "6",
                                                                                "_",
                                                                                "6",
                                                                                "4",
                                                                                "-",
                                                                                "f",
                                                                                "r",
                                                                                "e",
                                                                                "e",
                                                                                "b",
                                                                                "s",
                                                                                "d",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "X86_64_Linux": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "x",
                                                                                "8",
                                                                                "6",
                                                                                "_",
                                                                                "6",
                                                                                "4",
                                                                                "-",
                                                                                "l",
                                                                                "i",
                                                                                "n",
                                                                                "u",
                                                                                "x",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                          "X86_64_Solaris": Object {
                                                                            "body": Object {
                                                                              "chunks": Array [
                                                                                "x",
                                                                                "8",
                                                                                "6",
                                                                                "_",
                                                                                "6",
                                                                                "4",
                                                                                "-",
                                                                                "s",
                                                                                "o",
                                                                                "l",
                                                                                "a",
                                                                                "r",
                                                                                "i",
                                                                                "s",
                                                                              ],
                                                                              "type": "TextLit",
                                                                            },
                                                                            "type": "Lambda",
                                                                            "var": "_",
                                                                            "varType": Object {
                                                                              "fields": Object {},
                                                                              "type": "Record",
                                                                            },
                                                                          },
                                                                        },
                                                                        "type": "RecordLit",
                                                                      },
                                                                      Object {
                                                                        "type": "Var",
                                                                        "var": Object {
                                                                          "label": "element",
                                                                          "n": 0,
                                                                        },
                                                                      },
                                                                    ],
                                                                    "type": "Merge",
                                                                  },
                                                                  "b": Object {
                                                                    "chunks": Array [
                                                                      ",",
                                                                    ],
                                                                    "type": "TextLit",
                                                                  },
                                                                  "type": "TextAppend",
                                                                },
                                                                "b": Object {
                                                                  "type": "Var",
                                                                  "var": Object {
                                                                    "label": "result",
                                                                    "n": 0,
                                                                  },
                                                                },
                                                                "type": "TextAppend",
                                                              },
                                                              "name": "NonEmpty",
                                                            },
                                                            "type": "UnionLit",
                                                          },
                                                          "type": "Lambda",
                                                          "var": "result",
                                                          "varType": Object {
                                                            "type": "Text",
                                                          },
                                                        },
                                                      },
                                                      "type": "RecordLit",
                                                    },
                                                    Object {
                                                      "type": "Var",
                                                      "var": Object {
                                                        "label": "status",
                                                        "n": 0,
                                                      },
                                                    },
                                                  ],
                                                  "type": "Merge",
                                                },
                                                "type": "Lambda",
                                                "var": "status",
                                                "varType": Object {
                                                  "alts": Object {
                                                    "Empty": Object {
                                                      "fields": Object {},
                                                      "type": "Record",
                                                    },
                                                  },
                                                  "type": "Union",
                                                },
                                              },
                                              "type": "Lambda",
                                              "var": "element",
                                              "varType": Object {
                                                "alts": Object {
                                                  "AArch64_Linux": Object {
                                                    "fields": Object {},
                                                    "type": "Record",
                                                  },
                                                },
                                                "type": "Union",
                                              },
                                            },
                                            "type": "App",
                                          },
                                          "b": Object {
                                            "alts": Object {
                                              "NonEmpty": Object {
                                                "type": "Text",
                                              },
                                            },
                                            "choice": Object {
                                              "expr": Object {
                                                "fields": Object {},
                                                "type": "RecordLit",
                                              },
                                              "name": "Empty",
                                            },
                                            "type": "UnionLit",
                                          },
                                          "type": "App",
                                        },
                                      ],
                                      "type": "Merge",
                                    },
                                    "type": "TextAppend",
                                  },
                                  "b": Object {
                                    "chunks": Array [
                                      " ",
                                    ],
                                    "type": "TextLit",
                                  },
                                  "type": "TextAppend",
                                },
                                "b": undefined,
                                "type": "TextAppend",
                              },
                              "b": Object {
                                "chunks": Array [
                                  " ",
                                ],
                                "type": "TextLit",
                              },
                              "type": "TextAppend",
                            },
                            "b": Object {
                              "a": Object {
                                "type": "Integer/show",
                              },
                              "b": Object {
                                "a": Object {
                                  "type": "Natural/toInteger",
                                },
                                "b": undefined,
                                "type": "App",
                              },
                              "type": "App",
                            },
                            "type": "TextAppend",
                          },
                          "b": Object {
                            "chunks": Array [
                              " ",
                            ],
                            "type": "TextLit",
                          },
                          "type": "TextAppend",
                        },
                        "b": Object {
                          "a": Object {
                            "type": "Integer/show",
                          },
                          "b": Object {
                            "a": Object {
                              "type": "Natural/toInteger",
                            },
                            "b": undefined,
                            "type": "App",
                          },
                          "type": "App",
                        },
                        "type": "TextAppend",
                      },
                      "b": Object {
                        "chunks": Array [
                          " ",
                        ],
                        "type": "TextLit",
                      },
                      "type": "TextAppend",
                    },
                    "b": Object {
                      "args": Array [
                        Object {
                          "fields": Object {
                            "Empty": Object {
                              "body": Object {
                                "chunks": Array [],
                                "type": "TextLit",
                              },
                              "type": "Lambda",
                              "var": "_",
                              "varType": Object {
                                "fields": Object {},
                                "type": "Record",
                              },
                            },
                            "NonEmpty": Object {
                              "body": Object {
                                "type": "Var",
                                "var": Object {
                                  "label": "result",
                                  "n": 0,
                                },
                              },
                              "type": "Lambda",
                              "var": "result",
                              "varType": Object {
                                "type": "Text",
                              },
                            },
                          },
                          "type": "RecordLit",
                        },
                        Object {
                          "a": Object {
                            "a": Object {
                              "a": Object {
                                "a": Object {
                                  "a": Object {
                                    "type": "List/fold",
                                  },
                                  "b": Object {
                                    "type": "Text",
                                  },
                                  "type": "App",
                                },
                                "b": undefined,
                                "type": "App",
                              },
                              "b": Object {
                                "alts": Object {
                                  "Empty": Object {
                                    "fields": Object {},
                                    "type": "Record",
                                  },
                                },
                                "type": "Union",
                              },
                              "type": "App",
                            },
                            "b": Object {
                              "body": Object {
                                "body": Object {
                                  "args": Array [
                                    Object {
                                      "fields": Object {
                                        "Empty": Object {
                                          "body": Object {
                                            "alts": Object {
                                              "Empty": Object {
                                                "fields": Object {},
                                                "type": "Record",
                                              },
                                            },
                                            "choice": Object {
                                              "expr": Object {
                                                "type": "Var",
                                                "var": Object {
                                                  "label": "element",
                                                  "n": 0,
                                                },
                                              },
                                              "name": "NonEmpty",
                                            },
                                            "type": "UnionLit",
                                          },
                                          "type": "Lambda",
                                          "var": "_",
                                          "varType": Object {
                                            "fields": Object {},
                                            "type": "Record",
                                          },
                                        },
                                        "NonEmpty": Object {
                                          "body": Object {
                                            "alts": Object {
                                              "Empty": Object {
                                                "fields": Object {},
                                                "type": "Record",
                                              },
                                            },
                                            "choice": Object {
                                              "expr": Object {
                                                "a": Object {
                                                  "a": Object {
                                                    "type": "Var",
                                                    "var": Object {
                                                      "label": "element",
                                                      "n": 0,
                                                    },
                                                  },
                                                  "b": Object {
                                                    "chunks": Array [
                                                      ",",
                                                    ],
                                                    "type": "TextLit",
                                                  },
                                                  "type": "TextAppend",
                                                },
                                                "b": Object {
                                                  "type": "Var",
                                                  "var": Object {
                                                    "label": "result",
                                                    "n": 0,
                                                  },
                                                },
                                                "type": "TextAppend",
                                              },
                                              "name": "NonEmpty",
                                            },
                                            "type": "UnionLit",
                                          },
                                          "type": "Lambda",
                                          "var": "result",
                                          "varType": Object {
                                            "type": "Text",
                                          },
                                        },
                                      },
                                      "type": "RecordLit",
                                    },
                                    Object {
                                      "type": "Var",
                                      "var": Object {
                                        "label": "status",
                                        "n": 0,
                                      },
                                    },
                                  ],
                                  "type": "Merge",
                                },
                                "type": "Lambda",
                                "var": "status",
                                "varType": Object {
                                  "alts": Object {
                                    "Empty": Object {
                                      "fields": Object {},
                                      "type": "Record",
                                    },
                                  },
                                  "type": "Union",
                                },
                              },
                              "type": "Lambda",
                              "var": "element",
                              "varType": Object {
                                "type": "Text",
                              },
                            },
                            "type": "App",
                          },
                          "b": Object {
                            "alts": Object {
                              "NonEmpty": Object {
                                "type": "Text",
                              },
                            },
                            "choice": Object {
                              "expr": Object {
                                "fields": Object {},
                                "type": "RecordLit",
                              },
                              "name": "Empty",
                            },
                            "type": "UnionLit",
                          },
                          "type": "App",
                        },
                      ],
                      "type": "Merge",
                    },
                    "type": "TextAppend",
                  },
                  "b": Object {
                    "chunks": Array [
                      " ",
                    ],
                    "type": "TextLit",
                  },
                  "type": "TextAppend",
                },
                "b": Object {
                  "args": Array [
                    Object {
                      "fields": Object {
                        "Empty": Object {
                          "body": Object {
                            "chunks": Array [],
                            "type": "TextLit",
                          },
                          "type": "Lambda",
                          "var": "_",
                          "varType": Object {
                            "fields": Object {},
                            "type": "Record",
                          },
                        },
                        "NonEmpty": Object {
                          "body": Object {
                            "type": "Var",
                            "var": Object {
                              "label": "result",
                              "n": 0,
                            },
                          },
                          "type": "Lambda",
                          "var": "result",
                          "varType": Object {
                            "type": "Text",
                          },
                        },
                      },
                      "type": "RecordLit",
                    },
                    Object {
                      "a": Object {
                        "a": Object {
                          "a": Object {
                            "a": Object {
                              "a": Object {
                                "type": "List/fold",
                              },
                              "b": Object {
                                "type": "Text",
                              },
                              "type": "App",
                            },
                            "b": undefined,
                            "type": "App",
                          },
                          "b": Object {
                            "alts": Object {
                              "Empty": Object {
                                "fields": Object {},
                                "type": "Record",
                              },
                            },
                            "type": "Union",
                          },
                          "type": "App",
                        },
                        "b": Object {
                          "body": Object {
                            "body": Object {
                              "args": Array [
                                Object {
                                  "fields": Object {
                                    "Empty": Object {
                                      "body": Object {
                                        "alts": Object {
                                          "Empty": Object {
                                            "fields": Object {},
                                            "type": "Record",
                                          },
                                        },
                                        "choice": Object {
                                          "expr": Object {
                                            "type": "Var",
                                            "var": Object {
                                              "label": "element",
                                              "n": 0,
                                            },
                                          },
                                          "name": "NonEmpty",
                                        },
                                        "type": "UnionLit",
                                      },
                                      "type": "Lambda",
                                      "var": "_",
                                      "varType": Object {
                                        "fields": Object {},
                                        "type": "Record",
                                      },
                                    },
                                    "NonEmpty": Object {
                                      "body": Object {
                                        "alts": Object {
                                          "Empty": Object {
                                            "fields": Object {},
                                            "type": "Record",
                                          },
                                        },
                                        "choice": Object {
                                          "expr": Object {
                                            "a": Object {
                                              "a": Object {
                                                "type": "Var",
                                                "var": Object {
                                                  "label": "element",
                                                  "n": 0,
                                                },
                                              },
                                              "b": Object {
                                                "chunks": Array [
                                                  ",",
                                                ],
                                                "type": "TextLit",
                                              },
                                              "type": "TextAppend",
                                            },
                                            "b": Object {
                                              "type": "Var",
                                              "var": Object {
                                                "label": "result",
                                                "n": 0,
                                              },
                                            },
                                            "type": "TextAppend",
                                          },
                                          "name": "NonEmpty",
                                        },
                                        "type": "UnionLit",
                                      },
                                      "type": "Lambda",
                                      "var": "result",
                                      "varType": Object {
                                        "type": "Text",
                                      },
                                    },
                                  },
                                  "type": "RecordLit",
                                },
                                Object {
                                  "type": "Var",
                                  "var": Object {
                                    "label": "status",
                                    "n": 0,
                                  },
                                },
                              ],
                              "type": "Merge",
                            },
                            "type": "Lambda",
                            "var": "status",
                            "varType": Object {
                              "alts": Object {
                                "Empty": Object {
                                  "fields": Object {},
                                  "type": "Record",
                                },
                              },
                              "type": "Union",
                            },
                          },
                          "type": "Lambda",
                          "var": "element",
                          "varType": Object {
                            "type": "Text",
                          },
                        },
                        "type": "App",
                      },
                      "b": Object {
                        "alts": Object {
                          "NonEmpty": Object {
                            "type": "Text",
                          },
                        },
                        "choice": Object {
                          "expr": Object {
                            "fields": Object {},
                            "type": "RecordLit",
                          },
                          "name": "Empty",
                        },
                        "type": "UnionLit",
                      },
                      "type": "App",
                    },
                  ],
                  "type": "Merge",
                },
                "type": "TextAppend",
              },
              "b": Object {
                "chunks": Array [
                  Array [
                    "\\\\",
                    "n",
                  ],
                ],
                "type": "TextLit",
              },
              "type": "TextAppend",
            },
            "b": Object {
              "type": "Var",
              "var": Object {
                "label": "y",
                "n": 0,
              },
            },
            "type": "TextAppend",
          },
          "type": "Lambda",
          "var": "y",
          "varType": Object {
            "type": "Text",
          },
        },
        "type": "Lambda",
        "var": "x",
        "varType": Object {
          "fields": Object {
            "cores": Object {
              "type": "Natural",
            },
            "host": Object {
              "type": "Text",
            },
            "key": Object {
              "type": "Text",
            },
            "mandatoryFeatures": Object {
              "a": Object {
                "type": "List",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
            "platforms": Object {
              "a": Object {
                "type": "List",
              },
              "b": Object {
                "alts": Object {
                  "AArch64_Linux": Object {
                    "fields": Object {},
                    "type": "Record",
                  },
                },
                "type": "Union",
              },
              "type": "App",
            },
            "speedFactor": Object {
              "type": "Natural",
            },
            "supportedFeatures": Object {
              "a": Object {
                "type": "List",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
            "user": Object {
              "a": Object {
                "type": "Optional",
              },
              "b": Object {
                "type": "Text",
              },
              "type": "App",
            },
          },
          "type": "Record",
        },
      },
      "type": "App",
    },
    "b": Object {
      "chunks": Array [],
      "type": "TextLit",
    },
    "type": "App",
  },
  "type": "Lambda",
  "var": "xs",
  "varType": Object {
    "a": Object {
      "type": "List",
    },
    "b": Object {
      "fields": Object {
        "cores": Object {
          "type": "Natural",
        },
        "host": Object {
          "type": "Text",
        },
        "key": Object {
          "type": "Text",
        },
        "mandatoryFeatures": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "platforms": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "alts": Object {
              "AArch64_Linux": Object {
                "fields": Object {},
                "type": "Record",
              },
            },
            "type": "Union",
          },
          "type": "App",
        },
        "speedFactor": Object {
          "type": "Natural",
        },
        "supportedFeatures": Object {
          "a": Object {
            "type": "List",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
        "user": Object {
          "a": Object {
            "type": "Optional",
          },
          "b": Object {
            "type": "Text",
          },
          "type": "App",
        },
      },
      "type": "Record",
    },
    "type": "App",
  },
}
`;

exports[`parser/let: parser/let 1`] = `
Object {
  "body": Object {
    "integer": "1",
    "node": "IntegerLit",
  },
  "label": "x",
  "type": "Let",
  "varType": null,
}
`;

exports[`parser/lineComment: parser/lineComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/list: parser/list 1`] = `
Object {
  "list": Array [
    Object {
      "list": Array [
        Object {
          "integer": "1",
          "node": "IntegerLit",
        },
        Object {
          "integer": "2",
          "node": "IntegerLit",
        },
        Object {
          "integer": "3",
          "node": "IntegerLit",
        },
      ],
      "type": "ListLit",
    },
    Object {
      "expr": Object {
        "list": Array [
          Object {
            "integer": "1",
            "node": "IntegerLit",
          },
          Object {
            "integer": "2",
            "node": "IntegerLit",
          },
          Object {
            "integer": "3",
            "node": "IntegerLit",
          },
        ],
        "type": "ListLit",
      },
      "node": "annotate",
      "type": Object {
        "a": Object {
          "type": "List",
        },
        "b": Object {
          "type": "Integer",
        },
        "type": "App",
      },
    },
    Object {
      "list": Array [],
      "type": "ListLit",
    },
  ],
  "type": "ListLit",
}
`;

exports[`parser/merge: parser/merge 1`] = `
Object {
  "body": Object {
    "fields": Object {
      "bar": Object {
        "args": Array [
          Object {
            "fields": Object {},
            "type": "RecordLit",
          },
          Object {
            "type": "Var",
            "var": Object {
              "label": "x",
              "n": 0,
            },
          },
        ],
        "type": "Merge",
      },
      "foo": Object {
        "args": Array [
          Object {
            "fields": Object {
              "Left": Object {
                "body": Object {
                  "type": "Var",
                  "var": Object {
                    "label": "b",
                    "n": 0,
                  },
                },
                "type": "Lambda",
                "var": "b",
                "varType": Object {
                  "type": "Bool",
                },
              },
              "Right": Object {
                "type": "Natural/even",
              },
            },
            "type": "RecordLit",
          },
          Object {
            "alts": Object {
              "Right": Object {
                "type": "Natural",
              },
            },
            "choice": Object {
              "expr": Object {
                "type": "True",
              },
              "name": "Left",
            },
            "type": "UnionLit",
          },
        ],
        "type": "Merge",
      },
    },
    "type": "RecordLit",
  },
  "type": "Lambda",
  "var": "x",
  "varType": Object {
    "alts": Array [],
    "type": "Union",
  },
}
`;

exports[`parser/natural: parser/natural 1`] = `
Object {
  "list": Array [
    Object {
      "n": "0",
      "type": "NaturalLit",
    },
    Object {
      "n": "1",
      "type": "NaturalLit",
    },
    Object {
      "n": "01",
      "type": "NaturalLit",
    },
    Object {
      "n": "10",
      "type": "NaturalLit",
    },
  ],
  "type": "ListLit",
}
`;

exports[`parser/nestedBlockComment: parser/nestedBlockComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/operators: parser/operators 1`] = `
Object {
  "a": Object {
    "fields": Object {
      "foo": Object {
        "a": Object {
          "a": Object {
            "type": "False",
          },
          "b": Object {
            "a": Object {
              "type": "Natural/even",
            },
            "b": Object {
              "a": Object {
                "n": "1",
                "type": "NaturalLit",
              },
              "b": Object {
                "a": Object {
                  "n": "2",
                  "type": "NaturalLit",
                },
                "b": Object {
                  "n": "3",
                  "type": "NaturalLit",
                },
                "type": "NaturalTimes",
              },
              "type": "NaturalPlus",
            },
            "type": "App",
          },
          "type": "BoolAnd",
        },
        "b": Object {
          "a": Object {
            "type": "True",
          },
          "b": Object {
            "a": Object {
              "type": "False",
            },
            "b": Object {
              "type": "True",
            },
            "type": "BoolNE",
          },
          "type": "BoolEQ",
        },
        "type": "BoolOr",
      },
    },
    "type": "RecordLit",
  },
  "b": Object {
    "a": Object {
      "fields": Object {
        "bar": Object {
          "a": Object {
            "list": Array [
              Object {
                "a": Object {
                  "chunks": Array [
                    "A",
                    "B",
                    "C",
                  ],
                  "type": "TextLit",
                },
                "b": Object {
                  "chunks": Array [
                    "D",
                    "E",
                    "F",
                  ],
                  "type": "TextLit",
                },
                "type": "TextAppend",
              },
            ],
            "type": "ListLit",
          },
          "b": Object {
            "list": Array [
              Object {
                "chunks": Array [
                  "G",
                  "H",
                  "I",
                ],
                "type": "TextLit",
              },
            ],
            "type": "ListLit",
          },
          "type": "ListAppend",
        },
      },
      "type": "RecordLit",
    },
    "b": Object {
      "fields": Object {
        "baz": Object {
          "type": "True",
        },
      },
      "type": "RecordLit",
    },
    "type": "Prefer",
  },
  "type": "Combine",
}
`;

exports[`parser/pathTermination: parser/pathTermination 1`] = `
Object {
  "body": Object {
    "a": Object {
      "import": Object {
        "asText": false,
        "hash": null,
        "path": "./example",
        "type": "file",
      },
      "type": "Import",
    },
    "b": Object {
      "list": Array [
        Object {
          "import": Object {
            "asText": false,
            "hash": null,
            "path": "./example",
            "type": "file",
          },
          "type": "Import",
        },
        Object {
          "a": Object {
            "import": Object {
              "asText": false,
              "hash": null,
              "path": "./example",
              "type": "file",
            },
            "type": "Import",
          },
          "b": Object {
            "fields": Object {
              "bar": Object {
                "a": Object {
                  "import": Object {
                    "asText": false,
                    "hash": null,
                    "path": "./example",
                    "type": "file",
                  },
                  "type": "Import",
                },
                "b": Object {
                  "alts": Object {},
                  "choice": Object {
                    "expr": Object {
                      "import": Object {
                        "asText": false,
                        "hash": null,
                        "path": "./example",
                        "type": "file",
                      },
                      "type": "Import",
                    },
                    "name": "baz",
                  },
                  "type": "UnionLit",
                },
                "type": "App",
              },
              "qux": Object {
                "import": Object {
                  "asText": false,
                  "hash": null,
                  "path": "./example",
                  "type": "file",
                },
                "type": "Import",
              },
            },
            "type": "RecordLit",
          },
          "type": "App",
        },
        Object {
          "import": Object {
            "asText": false,
            "hash": null,
            "path": "./example",
            "type": "file",
          },
          "type": "Import",
        },
      ],
      "type": "ListLit",
    },
    "type": "App",
  },
  "type": "Lambda",
  "var": "x",
  "varType": Object {
    "import": Object {
      "asText": false,
      "hash": null,
      "path": "./example",
      "type": "file",
    },
    "type": "Import",
  },
}
`;

exports[`parser/paths: parser/paths 1`] = `
Object {
  "list": Array [
    Object {
      "import": Object {
        "asText": false,
        "hash": null,
        "path": "/absolute/path",
        "type": "file",
      },
      "type": "Import",
    },
    Object {
      "import": Object {
        "asText": false,
        "hash": null,
        "path": "./relative/path",
        "type": "file",
      },
      "type": "Import",
    },
    Object {
      "import": Object {
        "asText": false,
        "hash": null,
        "path": "~/home/anchored/path",
        "type": "file",
      },
      "type": "Import",
    },
    Object {
      "import": Object {
        "asText": false,
        "hash": null,
        "path": "/ipfs/QmQ8w5PLcsNz56dMvRtq54vbuPe9cNnCCUXAQp6xLc6Ccx/Prelude",
        "type": "file",
      },
      "type": "Import",
    },
  ],
  "type": "ListLit",
}
`;

exports[`parser/quotedLabel: parser/quotedLabel 1`] = `
Object {
  "fields": Object {
    "example1": Object {
      "body": Object {
        "integer": "1",
        "node": "IntegerLit",
      },
      "label": Array [
        "l",
        "e",
        "t",
      ],
      "type": "Let",
      "varType": null,
    },
    "example2": Object {
      "body": Object {
        "integer": "1",
        "node": "IntegerLit",
      },
      "label": Array [
        ":",
        ".",
      ],
      "type": "Let",
      "varType": null,
    },
  },
  "type": "RecordLit",
}
`;

exports[`parser/record: parser/record 1`] = `
Object {
  "expr": Object {
    "fields": Object {
      "bar": Object {
        "n": "2",
        "type": "NaturalLit",
      },
      "baz": Object {
        "type": "True",
      },
      "foo": Object {
        "integer": "1",
        "node": "IntegerLit",
      },
    },
    "type": "RecordLit",
  },
  "node": "annotate",
  "type": Object {
    "fields": Object {
      "bar": Object {
        "type": "Natural",
      },
      "baz": Object {
        "type": "Bool",
      },
      "foo": Object {
        "type": "Integer",
      },
    },
    "type": "Record",
  },
}
`;

exports[`parser/reservedPrefix: parser/reservedPrefix 1`] = `
Object {
  "body": Object {
    "type": "Integer",
  },
  "label": "TypeSynonym",
  "type": "Let",
  "varType": null,
}
`;

exports[`parser/singleQuotedString: parser/singleQuotedString 1`] = `
Array [
  "''",
  Array [
    "
",
    Array [
      "A",
      Array [
        "B",
        Array [
          "C",
          Array [
            "
",
            Array [
              "D",
              Array [
                "E",
                Array [
                  "F",
                  Array [
                    "
",
                    "''",
                  ],
                ],
              ],
            ],
          ],
        ],
      ],
    ],
  ],
]
`;

exports[`parser/unicodeComment: parser/unicodeComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/unicodeDoubleQuotedString: parser/unicodeDoubleQuotedString 1`] = `
Object {
  "chunks": Array [
    "∀",
    "(",
    "a",
    " ",
    ":",
    " ",
    "T",
    "y",
    "p",
    "e",
    ")",
    " ",
    "→",
    " ",
    "a",
  ],
  "type": "TextLit",
}
`;

exports[`parser/union: parser/union 1`] = `
Object {
  "expr": Object {
    "alts": Object {
      "A": Object {
        "fields": Object {},
        "type": "Record",
      },
    },
    "type": "Union",
  },
  "node": "annotate",
  "type": Object {
    "alts": Object {
      "A": Object {
        "fields": Object {},
        "type": "Record",
      },
    },
    "type": "Union",
  },
}
`;

exports[`parser/whitespace: parser/whitespace 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/whitespaceBuffet: parser/whitespaceBuffet 1`] = `
Object {
  "a": Object {
    "type": "Natural/even",
  },
  "b": Object {
    "n": "2",
    "type": "NaturalLit",
  },
  "type": "App",
}
`;
