// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`normalization/doubleShowA: normalization/doubleShowA 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Object {
        "node": "Double/show",
      },
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/doubleShowB: normalization/doubleShowB 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Array [
        Array [
          "\\"",
          Array [
            "-",
            "0",
            ".",
            "4",
            "2",
          ],
          "\\"",
        ],
        Array [],
      ],
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/integerShowA: normalization/integerShowA 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Object {
        "node": "Integer/show",
      },
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/integerShowB: normalization/integerShowB 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Array [
        Array [
          "\\"",
          Array [
            "1",
            "3",
            "3",
            "7",
          ],
          "\\"",
        ],
        Array [],
      ],
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/naturalPlusA: normalization/naturalPlusA 1`] = `
Object {
  "node": "NaturalPlus",
}
`;

exports[`normalization/naturalPlusB: normalization/naturalPlusB 1`] = `
Array [
  "+",
  "3",
  Array [
    "
",
  ],
]
`;

exports[`normalization/naturalShowA: normalization/naturalShowA 1`] = `
Object {
  "node": "Natural/show",
}
`;

exports[`normalization/naturalShowB: normalization/naturalShowB 1`] = `
Array [
  Array [
    "\\"",
    Array [
      "+",
      "4",
      "2",
    ],
    "\\"",
  ],
  Array [
    "
",
  ],
]
`;

exports[`normalization/naturalToIntegerA: normalization/naturalToIntegerA 1`] = `
Object {
  "node": "Natural/toInteger",
}
`;

exports[`normalization/naturalToIntegerB: normalization/naturalToIntegerB 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`normalization/optionalBuildA: normalization/optionalBuildA 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Object {
        "node": "Optional/build",
      },
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/optionalBuildB: normalization/optionalBuildB 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Array [
        Array [
          "[",
          Array [
            " ",
          ],
        ],
        Array [
          Array [
            "+",
            "1",
            Array [
              " ",
            ],
          ],
          Array [
            "]",
            Array [
              " ",
            ],
          ],
          Array [
            ":",
            Array [
              " ",
            ],
          ],
          Object {
            "node": "Optional",
          },
          Object {
            "node": "Natural",
          },
        ],
      ],
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/optionalBuildFoldA: normalization/optionalBuildFoldA 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Object {
        "args": Array [
          Array [
            "f",
            Array [
              "
",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
          ],
          Object {
            "args": Array [
              Array [
                "optional",
                Array [
                  " ",
                ],
              ],
              Object {
                "node": "Type",
              },
              Object {
                "args": Array [
                  Array [
                    "just",
                    Array [
                      " ",
                    ],
                  ],
                  Array [
                    Object {
                      "node": "Text",
                    },
                    Array [
                      "→",
                      Array [
                        " ",
                      ],
                    ],
                    Object {
                      "args": Array [
                        Array [
                          Array [
                            "optional",
                            Array [],
                          ],
                          null,
                          Array [],
                        ],
                      ],
                      "type": "Var",
                    },
                  ],
                  Object {
                    "args": Array [
                      Array [
                        "nothing",
                        Array [
                          " ",
                        ],
                      ],
                      Object {
                        "args": Array [
                          Array [
                            Array [
                              "optional",
                              Array [],
                            ],
                            null,
                            Array [],
                          ],
                        ],
                        "type": "Var",
                      },
                      Object {
                        "args": Array [
                          Array [
                            Array [
                              "optional",
                              Array [
                                "
",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                              ],
                            ],
                            null,
                            Array [],
                          ],
                        ],
                        "type": "Var",
                      },
                    ],
                    "type": "Forall",
                  },
                ],
                "type": "Forall",
              },
            ],
            "type": "Forall",
          },
          Object {
            "node": "Optional/fold",
          },
        ],
        "type": "Lambda",
      },
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/optionalBuildFoldB: normalization/optionalBuildFoldB 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Object {
        "args": Array [
          Array [
            "f",
            Array [
              "
",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
            ],
          ],
          Object {
            "args": Array [
              Array [
                "optional",
                Array [
                  " ",
                ],
              ],
              Object {
                "node": "Type",
              },
              Object {
                "args": Array [
                  Array [
                    "just",
                    Array [
                      " ",
                    ],
                  ],
                  Array [
                    Object {
                      "node": "Text",
                    },
                    Array [
                      "→",
                      Array [
                        " ",
                      ],
                    ],
                    Object {
                      "args": Array [
                        Array [
                          Array [
                            "optional",
                            Array [],
                          ],
                          null,
                          Array [],
                        ],
                      ],
                      "type": "Var",
                    },
                  ],
                  Object {
                    "args": Array [
                      Array [
                        "nothing",
                        Array [
                          " ",
                        ],
                      ],
                      Object {
                        "args": Array [
                          Array [
                            Array [
                              "optional",
                              Array [],
                            ],
                            null,
                            Array [],
                          ],
                        ],
                        "type": "Var",
                      },
                      Object {
                        "args": Array [
                          Array [
                            Array [
                              "optional",
                              Array [
                                "
",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                                " ",
                              ],
                            ],
                            null,
                            Array [],
                          ],
                        ],
                        "type": "Var",
                      },
                    ],
                    "type": "Forall",
                  },
                ],
                "type": "Forall",
              },
            ],
            "type": "Forall",
          },
          Object {
            "args": Array [
              Array [
                Array [
                  "f",
                  Array [
                    "
",
                  ],
                ],
                null,
                Array [],
              ],
            ],
            "type": "Var",
          },
        ],
        "type": "Lambda",
      },
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/optionalFoldA: normalization/optionalFoldA 1`] = `
Object {
  "args": Array [
    Array [
      "f",
      Array [
        " ",
      ],
    ],
    null,
    Object {
      "args": Array [
        Array [
          "o",
          Array [
            " ",
          ],
        ],
        Object {
          "node": "Optional",
        },
        Object {
          "node": "Optional/fold",
        },
      ],
      "type": "Lambda",
    },
    Object {
      "args": Array [
        Object {
          "example0, ": Object {
            "args": Array [
              Array [
                Array [
                  "f",
                  Array [
                    " ",
                  ],
                ],
                null,
                Array [],
              ],
            ],
            "type": "Var",
          },
        },
      ],
      "type": "Record",
    },
  ],
  "type": "Let",
}
`;

exports[`normalization/optionalFoldB: normalization/optionalFoldB 1`] = `
Object {
  "args": Array [
    Object {
      "example0, ": Array [
        "+",
        "1",
        Array [],
      ],
    },
  ],
  "type": "Record",
}
`;

exports[`normalization/remoteSystemsA: normalization/remoteSystemsA 1`] = `
Object {
  "args": Array [
    Array [
      "Text/concatMap",
      Array [
        " ",
      ],
    ],
    null,
    Array [
      Array [
        Array [
          "http",
          "s",
        ],
        "://",
        Array [
          null,
          Array [
            "i",
            "p",
            "f",
            "s",
            ".",
            "i",
            "o",
          ],
          null,
        ],
        Array [
          Array [
            "/",
            Array [
              "i",
              "p",
              "f",
              "s",
            ],
          ],
          Array [
            "/",
            Array [
              "Q",
              "m",
              "Q",
              "8",
              "w",
              "5",
              "P",
              "L",
              "c",
              "s",
              "N",
              "z",
              "5",
              "6",
              "d",
              "M",
              "v",
              "R",
              "t",
              "q",
              "5",
              "4",
              "v",
              "b",
              "u",
              "P",
              "e",
              "9",
              "c",
              "N",
              "n",
              "C",
              "C",
              "U",
              "X",
              "A",
              "Q",
              "p",
              "6",
              "x",
              "L",
              "c",
              "6",
              "C",
              "c",
              "x",
            ],
          ],
          Array [
            "/",
            Array [
              "P",
              "r",
              "e",
              "l",
              "u",
              "d",
              "e",
            ],
          ],
          Array [
            "/",
            Array [
              "T",
              "e",
              "x",
              "t",
            ],
          ],
          Array [
            "/",
            Array [
              "c",
              "o",
              "n",
              "c",
              "a",
              "t",
              "M",
              "a",
              "p",
            ],
          ],
        ],
        null,
        null,
      ],
      Array [
        " ",
        "
",
        "
",
      ],
      null,
    ],
    Object {
      "args": Array [
        Array [
          "Text/concatSep",
          Array [
            " ",
          ],
        ],
        null,
        Array [
          Array [
            Array [
              "http",
              "s",
            ],
            "://",
            Array [
              null,
              Array [
                "i",
                "p",
                "f",
                "s",
                ".",
                "i",
                "o",
              ],
              null,
            ],
            Array [
              Array [
                "/",
                Array [
                  "i",
                  "p",
                  "f",
                  "s",
                ],
              ],
              Array [
                "/",
                Array [
                  "Q",
                  "m",
                  "Q",
                  "8",
                  "w",
                  "5",
                  "P",
                  "L",
                  "c",
                  "s",
                  "N",
                  "z",
                  "5",
                  "6",
                  "d",
                  "M",
                  "v",
                  "R",
                  "t",
                  "q",
                  "5",
                  "4",
                  "v",
                  "b",
                  "u",
                  "P",
                  "e",
                  "9",
                  "c",
                  "N",
                  "n",
                  "C",
                  "C",
                  "U",
                  "X",
                  "A",
                  "Q",
                  "p",
                  "6",
                  "x",
                  "L",
                  "c",
                  "6",
                  "C",
                  "c",
                  "x",
                ],
              ],
              Array [
                "/",
                Array [
                  "P",
                  "r",
                  "e",
                  "l",
                  "u",
                  "d",
                  "e",
                ],
              ],
              Array [
                "/",
                Array [
                  "T",
                  "e",
                  "x",
                  "t",
                ],
              ],
              Array [
                "/",
                Array [
                  "c",
                  "o",
                  "n",
                  "c",
                  "a",
                  "t",
                  "S",
                  "e",
                  "p",
                ],
              ],
            ],
            null,
            null,
          ],
          Array [
            " ",
            "
",
            "
",
          ],
          null,
        ],
        Object {
          "args": Array [
            Array [
              "Row",
              Array [
                " ",
              ],
            ],
            null,
            Object {
              "args": Array [
                Object {
                  "cores, ": Array [
                    ":",
                    Array [
                      "
",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                      " ",
                    ],
                  ],
                },
              ],
              "type": "Record",
            },
            Object {
              "args": Array [
                Array [
                  "renderRow",
                  Array [
                    " ",
                  ],
                ],
                null,
                Object {
                  "args": Array [
                    Array [
                      "row",
                      Array [
                        "
",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                        " ",
                      ],
                    ],
                    Object {
                      "args": Array [
                        Array [
                          Array [
                            "Row",
                            Array [
                              "
",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                              " ",
                            ],
                          ],
                          null,
                          Array [],
                        ],
                      ],
                      "type": "Var",
                    },
                    Object {
                      "args": Array [
                        Array [
                          "host",
                          Array [
                            " ",
                          ],
                        ],
                        null,
                        Object {
                          "node": "Optional/fold",
                        },
                        Object {
                          "args": Array [
                            Array [
                              "platforms",
                              Array [
                                " ",
                              ],
                            ],
                            null,
                            Object {
                              "args": Array [
                                Array [
                                  Array [
                                    "Text/concatSep",
                                    Array [
                                      " ",
                                    ],
                                  ],
                                  null,
                                  Array [],
                                ],
                              ],
                              "type": "Var",
                            },
                            Object {
                              "args": Array [
                                Array [
                                  "key",
                                  Array [
                                    " ",
                                  ],
                                ],
                                null,
                                undefined,
                                Object {
                                  "args": Array [
                                    Array [
                                      "cores",
                                      Array [
                                        " ",
                                      ],
                                    ],
                                    null,
                                    Object {
                                      "node": "Integer/show",
                                    },
                                    Object {
                                      "args": Array [
                                        Array [
                                          "speedFactor",
                                          Array [
                                            " ",
                                          ],
                                        ],
                                        null,
                                        Object {
                                          "node": "Integer/show",
                                        },
                                        Object {
                                          "args": Array [
                                            Array [
                                              "supportedFeatures",
                                              Array [
                                                " ",
                                              ],
                                            ],
                                            null,
                                            Object {
                                              "args": Array [
                                                Array [
                                                  Array [
                                                    "Text/concatSep",
                                                    Array [
                                                      " ",
                                                    ],
                                                  ],
                                                  null,
                                                  Array [],
                                                ],
                                              ],
                                              "type": "Var",
                                            },
                                            Object {
                                              "args": Array [
                                                Array [
                                                  "mandatoryFeatures",
                                                  Array [
                                                    " ",
                                                  ],
                                                ],
                                                null,
                                                Object {
                                                  "args": Array [
                                                    Array [
                                                      Array [
                                                        "Text/concatSep",
                                                        Array [
                                                          " ",
                                                        ],
                                                      ],
                                                      null,
                                                      Array [],
                                                    ],
                                                  ],
                                                  "type": "Var",
                                                },
                                                Array [
                                                  Array [
                                                    "''",
                                                    Array [
                                                      "
",
                                                      Array [
                                                        " ",
                                                        Array [
                                                          " ",
                                                          Array [
                                                            " ",
                                                            Array [
                                                              " ",
                                                              Array [
                                                                " ",
                                                                Array [
                                                                  " ",
                                                                  Array [
                                                                    " ",
                                                                    Array [
                                                                      " ",
                                                                      Array [
                                                                        " ",
                                                                        Array [
                                                                          " ",
                                                                          Array [
                                                                            " ",
                                                                            Array [
                                                                              " ",
                                                                              Array [
                                                                                " ",
                                                                                Array [
                                                                                  " ",
                                                                                  Array [
                                                                                    " ",
                                                                                    Array [
                                                                                      " ",
                                                                                      Array [
                                                                                        "\${",
                                                                                        Object {
                                                                                          "args": Array [
                                                                                            Array [
                                                                                              Array [
                                                                                                "host",
                                                                                                Array [],
                                                                                              ],
                                                                                              null,
                                                                                              Array [],
                                                                                            ],
                                                                                          ],
                                                                                          "type": "Var",
                                                                                        },
                                                                                        "}",
                                                                                        Array [
                                                                                          " ",
                                                                                          Array [
                                                                                            "\${",
                                                                                            Object {
                                                                                              "args": Array [
                                                                                                Array [
                                                                                                  Array [
                                                                                                    "platforms",
                                                                                                    Array [],
                                                                                                  ],
                                                                                                  null,
                                                                                                  Array [],
                                                                                                ],
                                                                                              ],
                                                                                              "type": "Var",
                                                                                            },
                                                                                            "}",
                                                                                            Array [
                                                                                              " ",
                                                                                              Array [
                                                                                                "\${",
                                                                                                Object {
                                                                                                  "args": Array [
                                                                                                    Array [
                                                                                                      Array [
                                                                                                        "key",
                                                                                                        Array [],
                                                                                                      ],
                                                                                                      null,
                                                                                                      Array [],
                                                                                                    ],
                                                                                                  ],
                                                                                                  "type": "Var",
                                                                                                },
                                                                                                "}",
                                                                                                Array [
                                                                                                  " ",
                                                                                                  Array [
                                                                                                    "\${",
                                                                                                    Object {
                                                                                                      "args": Array [
                                                                                                        Array [
                                                                                                          Array [
                                                                                                            "cores",
                                                                                                            Array [],
                                                                                                          ],
                                                                                                          null,
                                                                                                          Array [],
                                                                                                        ],
                                                                                                      ],
                                                                                                      "type": "Var",
                                                                                                    },
                                                                                                    "}",
                                                                                                    Array [
                                                                                                      " ",
                                                                                                      Array [
                                                                                                        "\${",
                                                                                                        Object {
                                                                                                          "args": Array [
                                                                                                            Array [
                                                                                                              Array [
                                                                                                                "speedFactor",
                                                                                                                Array [],
                                                                                                              ],
                                                                                                              null,
                                                                                                              Array [],
                                                                                                            ],
                                                                                                          ],
                                                                                                          "type": "Var",
                                                                                                        },
                                                                                                        "}",
                                                                                                        Array [
                                                                                                          " ",
                                                                                                          Array [
                                                                                                            "\${",
                                                                                                            Object {
                                                                                                              "args": Array [
                                                                                                                Array [
                                                                                                                  Array [
                                                                                                                    "supportedFeatures",
                                                                                                                    Array [],
                                                                                                                  ],
                                                                                                                  null,
                                                                                                                  Array [],
                                                                                                                ],
                                                                                                              ],
                                                                                                              "type": "Var",
                                                                                                            },
                                                                                                            "}",
                                                                                                            Array [
                                                                                                              " ",
                                                                                                              Array [
                                                                                                                "\${",
                                                                                                                Object {
                                                                                                                  "args": Array [
                                                                                                                    Array [
                                                                                                                      Array [
                                                                                                                        "mandatoryFeatures",
                                                                                                                        Array [],
                                                                                                                      ],
                                                                                                                      null,
                                                                                                                      Array [],
                                                                                                                    ],
                                                                                                                  ],
                                                                                                                  "type": "Var",
                                                                                                                },
                                                                                                                "}",
                                                                                                                Array [
                                                                                                                  "
",
                                                                                                                  Array [
                                                                                                                    " ",
                                                                                                                    Array [
                                                                                                                      " ",
                                                                                                                      Array [
                                                                                                                        " ",
                                                                                                                        Array [
                                                                                                                          " ",
                                                                                                                          Array [
                                                                                                                            " ",
                                                                                                                            Array [
                                                                                                                              " ",
                                                                                                                              Array [
                                                                                                                                " ",
                                                                                                                                Array [
                                                                                                                                  " ",
                                                                                                                                  Array [
                                                                                                                                    " ",
                                                                                                                                    Array [
                                                                                                                                      " ",
                                                                                                                                      Array [
                                                                                                                                        " ",
                                                                                                                                        Array [
                                                                                                                                          " ",
                                                                                                                                          Array [
                                                                                                                                            " ",
                                                                                                                                            Array [
                                                                                                                                              " ",
                                                                                                                                              Array [
                                                                                                                                                " ",
                                                                                                                                                Array [
                                                                                                                                                  " ",
                                                                                                                                                  "''",
                                                                                                                                                ],
                                                                                                                                              ],
                                                                                                                                            ],
                                                                                                                                          ],
                                                                                                                                        ],
                                                                                                                                      ],
                                                                                                                                    ],
                                                                                                                                  ],
                                                                                                                                ],
                                                                                                                              ],
                                                                                                                            ],
                                                                                                                          ],
                                                                                                                        ],
                                                                                                                      ],
                                                                                                                    ],
                                                                                                                  ],
                                                                                                                ],
                                                                                                              ],
                                                                                                            ],
                                                                                                          ],
                                                                                                        ],
                                                                                                      ],
                                                                                                    ],
                                                                                                  ],
                                                                                                ],
                                                                                              ],
                                                                                            ],
                                                                                          ],
                                                                                        ],
                                                                                      ],
                                                                                    ],
                                                                                  ],
                                                                                ],
                                                                              ],
                                                                            ],
                                                                          ],
                                                                        ],
                                                                      ],
                                                                    ],
                                                                  ],
                                                                ],
                                                              ],
                                                            ],
                                                          ],
                                                        ],
                                                      ],
                                                    ],
                                                  ],
                                                  Array [
                                                    "
",
                                                    "
",
                                                  ],
                                                ],
                                              ],
                                              "type": "Let",
                                            },
                                          ],
                                          "type": "Let",
                                        },
                                      ],
                                      "type": "Let",
                                    },
                                  ],
                                  "type": "Let",
                                },
                              ],
                              "type": "Let",
                            },
                          ],
                          "type": "Let",
                        },
                      ],
                      "type": "Let",
                    },
                  ],
                  "type": "Lambda",
                },
                Object {
                  "args": Array [
                    Array [
                      Array [
                        "Text/concatMap",
                        Array [
                          " ",
                        ],
                      ],
                      null,
                      Array [],
                    ],
                  ],
                  "type": "Var",
                },
              ],
              "type": "Let",
            },
          ],
          "type": "Let",
        },
      ],
      "type": "Let",
    },
  ],
  "type": "Let",
}
`;

exports[`normalization/remoteSystemsB: normalization/remoteSystemsB 1`] = `
Object {
  "args": Array [
    Array [
      "xs",
      Array [
        " ",
      ],
    ],
    Object {
      "node": "List",
    },
    Object {
      "node": "List/fold",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/annotations: parser/annotations 1`] = `
Object {
  "expr": Object {
    "args": Array [
      Object {
        "foo, ": Object {
          "node": "ListAppend",
        },
      },
    ],
    "type": "Record",
  },
  "node": "annotate",
  "type": Object {
    "args": Array [
      Object {
        "foo, ": Array [
          ":",
          Array [
            " ",
          ],
        ],
      },
    ],
    "type": "Record",
  },
}
`;

exports[`parser/blockComment: parser/blockComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/builtins: parser/builtins 1`] = `
Object {
  "args": Array [
    Array [
      "x",
      Array [
        "
",
        " ",
        " ",
        " ",
        " ",
      ],
    ],
    Object {
      "args": Array [
        Object {
          "field0, ": Array [
            ":",
            Array [
              " ",
            ],
          ],
        },
      ],
      "type": "Record",
    },
    Object {
      "args": Array [
        Object {
          "field00, ": Object {
            "node": "Natural/fold",
          },
        },
      ],
      "type": "Record",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/constructors: parser/constructors 1`] = `
Object {
  "expr": Array [
    Array [
      "<",
      Array [
        " ",
      ],
    ],
    Array [
      Array [
        "Left",
        Array [
          " ",
        ],
      ],
      Array [
        Array [
          ":",
          Array [
            " ",
          ],
        ],
        Object {
          "node": "Natural",
        },
        Array [
          Array [
            "|",
            Array [
              " ",
            ],
          ],
          Array [
            Array [
              "Right",
              Array [
                " ",
              ],
            ],
            Array [
              Array [
                ":",
                Array [
                  " ",
                ],
              ],
              Object {
                "node": "Bool",
              },
              "",
            ],
          ],
        ],
      ],
    ],
    Array [
      ">",
      Array [
        "
",
      ],
    ],
  ],
  "node": "constructors",
}
`;

exports[`parser/double: parser/double 1`] = `
Array [
  Array [
    "[",
    Array [
      " ",
    ],
  ],
  Array [
    null,
    Array [
      "1",
    ],
    Array [
      ".",
      Array [
        "1",
      ],
      null,
    ],
    Array [],
  ],
  Array [
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        "-",
        Array [
          "1",
        ],
        Array [
          ".",
          Array [
            "1",
          ],
          null,
        ],
        Array [],
      ],
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        null,
        Array [
          "1",
        ],
        Array [
          "e",
          null,
          Array [
            "1",
          ],
        ],
        Array [],
      ],
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        null,
        Array [
          "1",
        ],
        Array [
          ".",
          Array [
            "1",
          ],
          Array [
            "e",
            null,
            Array [
              "1",
            ],
          ],
        ],
        Array [],
      ],
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        "-",
        Array [
          "1",
        ],
        Array [
          ".",
          Array [
            "1",
          ],
          null,
        ],
        Array [
          " ",
        ],
      ],
    ],
  ],
  Array [
    "]",
    Array [
      "
",
    ],
  ],
]
`;

exports[`parser/doubleQuotedString: parser/doubleQuotedString 1`] = `
Array [
  Array [
    "\\"",
    Array [
      "A",
      "B",
      "C",
    ],
    "\\"",
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/environmentVariables: parser/environmentVariables 1`] = `
Array [
  Array [
    "[",
    Array [
      " ",
    ],
  ],
  Array [
    "env:",
    Array [
      "F",
      Array [
        "O",
        "O",
      ],
    ],
    Array [
      "
",
      "
",
      " ",
      " ",
      Array [
        "--",
        Array [
          " ",
          "Y",
          "e",
          "s",
          ",",
          " ",
          "t",
          "h",
          "i",
          "s",
          " ",
          "i",
          "s",
          " ",
          "l",
          "e",
          "g",
          "a",
          "l",
        ],
        "
",
      ],
    ],
  ],
  Array [
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        "env:",
        Array [
          "\\"",
          Array [
            Array [
              "\\\\",
              "\\"",
            ],
            Array [
              "\\\\",
              "\\\\",
            ],
            Array [
              "\\\\",
              "a",
            ],
            Array [
              "\\\\",
              "b",
            ],
            Array [
              "\\\\",
              "f",
            ],
            Array [
              "\\\\",
              "n",
            ],
            Array [
              "\\\\",
              "r",
            ],
            Array [
              "\\\\",
              "t",
            ],
            Array [
              "\\\\",
              "v",
            ],
          ],
          "\\"",
        ],
        Array [
          "
",
        ],
      ],
    ],
  ],
  Array [
    "]",
    Array [
      "
",
    ],
  ],
]
`;

exports[`parser/escapedDoubleQuotedString: parser/escapedDoubleQuotedString 1`] = `
Array [
  Array [
    "\\"",
    Array [
      Array [
        "\\\\",
        "\\\\",
      ],
      Array [
        "\\\\",
        "\\"",
      ],
      Array [
        "\\\\",
        "$",
      ],
      Array [
        "\\\\",
        "\\\\",
      ],
      Array [
        "\\\\",
        "/",
      ],
      Array [
        "\\\\",
        "b",
      ],
      Array [
        "\\\\",
        "f",
      ],
      Array [
        "\\\\",
        "n",
      ],
      Array [
        "\\\\",
        "r",
      ],
      Array [
        "\\\\",
        "t",
      ],
      " ",
      Array [
        "\\\\",
        "u",
      ],
      "2",
      "2",
      "0",
      "0",
      "(",
      "a",
      " ",
      ":",
      " ",
      "T",
      "y",
      "p",
      "e",
      ")",
      " ",
      Array [
        "\\\\",
        "u",
      ],
      "2",
      "1",
      "9",
      "2",
      " ",
      "a",
    ],
    "\\"",
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/escapedSingleQuotedString: parser/escapedSingleQuotedString 1`] = `
Array [
  Array [
    "''",
    Array [
      "
",
      Array [
        "''\${",
        Array [
          "
",
          Array [
            "'''",
            Array [
              "
",
              "''",
            ],
          ],
        ],
      ],
    ],
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/fields: parser/fields 1`] = `undefined`;

exports[`parser/forall: parser/forall 1`] = `
Object {
  "args": Array [
    Array [
      "a",
      Array [
        " ",
      ],
    ],
    Object {
      "node": "Type",
    },
    Object {
      "args": Array [
        Array [
          "b",
          Array [
            " ",
          ],
        ],
        Object {
          "node": "Type",
        },
        Object {
          "args": Array [
            Array [
              Array [
                "a",
                Array [
                  "
",
                ],
              ],
              null,
              Array [],
            ],
          ],
          "type": "Var",
        },
      ],
      "type": "Forall",
    },
  ],
  "type": "Forall",
}
`;

exports[`parser/functionType: parser/functionType 1`] = `
Array [
  Object {
    "node": "Bool",
  },
  Array [
    "→",
    Array [
      " ",
    ],
  ],
  Array [
    Object {
      "node": "Bool",
    },
    Array [
      "->",
      Array [
        " ",
      ],
    ],
    Object {
      "node": "Bool",
    },
  ],
]
`;

exports[`parser/identifier: parser/identifier 1`] = `
Object {
  "args": Array [
    Array [
      "a",
      Array [
        " ",
      ],
    ],
    Object {
      "node": "Type",
    },
    Object {
      "args": Array [
        Array [
          "a",
          Array [
            " ",
          ],
        ],
        Object {
          "node": "Type",
        },
        Object {
          "args": Array [
            Array [
              Array [
                "a",
                Array [],
              ],
              Array [
                Array [
                  "@",
                  Array [],
                ],
                "1",
              ],
              Array [
                "
",
              ],
            ],
          ],
          "type": "Var",
        },
      ],
      "type": "Lambda",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/ifThenElse: parser/ifThenElse 1`] = `
Object {
  "false": Object {
    "integer": "2",
    "node": "IntegerLit",
  },
  "node": "if",
  "predicate": Object {
    "node": "True",
  },
  "true": Object {
    "integer": "1",
    "node": "IntegerLit",
  },
}
`;

exports[`parser/interpolatedDoubleQuotedString: parser/interpolatedDoubleQuotedString 1`] = `
Array [
  Array [
    "\\"",
    Array [
      "A",
      "B",
      "C",
      Array [
        "\${",
        Object {
          "node": "Integer/show",
        },
        "}",
      ],
    ],
    "\\"",
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/interpolatedSingleQuotedString: parser/interpolatedSingleQuotedString 1`] = `
Array [
  Array [
    "''",
    Array [
      "
",
      Array [
        "A",
        Array [
          "B",
          Array [
            "C",
            Array [
              "
",
              Array [
                "\${",
                Object {
                  "node": "Integer/show",
                },
                "}",
                Array [
                  "
",
                  "''",
                ],
              ],
            ],
          ],
        ],
      ],
    ],
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/label: parser/label 1`] = `
Object {
  "args": Array [
    Array [
      "_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-/",
      Array [
        " ",
      ],
    ],
    null,
    Object {
      "integer": "1",
      "node": "IntegerLit",
    },
    Object {
      "args": Array [
        Array [
          Array [
            "_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-/",
            Array [
              "
",
            ],
          ],
          null,
          Array [],
        ],
      ],
      "type": "Var",
    },
  ],
  "type": "Let",
}
`;

exports[`parser/lambda: parser/lambda 1`] = `
Object {
  "args": Array [
    Array [
      "a",
      Array [
        " ",
      ],
    ],
    Object {
      "node": "Type",
    },
    Object {
      "args": Array [
        Array [
          "b",
          Array [
            " ",
          ],
        ],
        Object {
          "node": "Type",
        },
        Object {
          "args": Array [
            Array [
              Array [
                "a",
                Array [
                  "
",
                ],
              ],
              null,
              Array [],
            ],
          ],
          "type": "Var",
        },
      ],
      "type": "Lambda",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/largeExpression: parser/largeExpression 1`] = `
Object {
  "args": Array [
    Array [
      "xs",
      Array [
        "
",
        " ",
        " ",
        " ",
        " ",
      ],
    ],
    Object {
      "node": "List",
    },
    Object {
      "node": "List/fold",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/let: parser/let 1`] = `
Object {
  "args": Array [
    Array [
      "x",
      Array [
        " ",
      ],
    ],
    null,
    Object {
      "integer": "1",
      "node": "IntegerLit",
    },
    Object {
      "args": Array [
        Array [
          "y",
          Array [
            " ",
          ],
        ],
        Object {
          "node": "Integer",
        },
        Object {
          "integer": "2",
          "node": "IntegerLit",
        },
        Object {
          "args": Array [
            Array [
              Array [
                "x",
                Array [
                  "
",
                ],
              ],
              null,
              Array [],
            ],
          ],
          "type": "Var",
        },
      ],
      "type": "Let",
    },
  ],
  "type": "Let",
}
`;

exports[`parser/lineComment: parser/lineComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/list: parser/list 1`] = `
Array [
  Array [
    "[",
    Array [
      " ",
    ],
  ],
  Array [
    Array [
      "[",
      Array [],
    ],
    Object {
      "integer": "1",
      "node": "IntegerLit",
    },
    Array [
      Array [
        Array [
          ",",
          Array [
            " ",
          ],
        ],
        Object {
          "integer": "2",
          "node": "IntegerLit",
        },
      ],
      Array [
        Array [
          ",",
          Array [
            " ",
          ],
        ],
        Object {
          "integer": "3",
          "node": "IntegerLit",
        },
      ],
    ],
    Array [
      "]",
      Array [
        "
",
      ],
    ],
  ],
  Array [
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Object {
        "expr": Array [
          Array [
            "[",
            Array [],
          ],
          Object {
            "integer": "1",
            "node": "IntegerLit",
          },
          Array [
            Array [
              Array [
                ",",
                Array [
                  " ",
                ],
              ],
              Object {
                "integer": "2",
                "node": "IntegerLit",
              },
            ],
            Array [
              Array [
                ",",
                Array [
                  " ",
                ],
              ],
              Object {
                "integer": "3",
                "node": "IntegerLit",
              },
            ],
          ],
          Array [
            "]",
            Array [
              " ",
            ],
          ],
        ],
        "node": "annotate",
        "type": Object {
          "node": "List",
        },
      },
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        Array [
          "[",
          Array [],
        ],
        Array [
          Array [
            "]",
            Array [
              " ",
            ],
          ],
          Array [
            ":",
            Array [
              " ",
            ],
          ],
          Object {
            "node": "List",
          },
          Object {
            "node": "Integer",
          },
        ],
      ],
    ],
  ],
  Array [
    "]",
    Array [
      "
",
    ],
  ],
]
`;

exports[`parser/merge: parser/merge 1`] = `
Object {
  "args": Array [
    Array [
      "x",
      Array [
        " ",
      ],
    ],
    Array [
      Array [
        "<",
        Array [],
      ],
      "",
      Array [
        ">",
        Array [],
      ],
    ],
    Object {
      "args": Array [
        Object {
          "bar, ": Object {
            "args": Array [
              Object {
                "args": Array [
                  Object {},
                ],
                "type": "Record",
              },
              Object {
                "args": Array [
                  Array [
                    Array [
                      "x",
                      Array [
                        " ",
                      ],
                    ],
                    null,
                    Array [],
                  ],
                ],
                "type": "Var",
              },
            ],
            "type": "Merge",
          },
        },
      ],
      "type": "Record",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/natural: parser/natural 1`] = `
Array [
  Array [
    "[",
    Array [
      " ",
    ],
  ],
  Array [
    "+",
    "0",
    Array [],
  ],
  Array [
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        "+",
        "1",
        Array [],
      ],
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        "+",
        "01",
        Array [],
      ],
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Array [
        "+",
        "10",
        Array [
          " ",
        ],
      ],
    ],
  ],
  Array [
    "]",
    Array [
      "
",
    ],
  ],
]
`;

exports[`parser/nestedBlockComment: parser/nestedBlockComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/operators: parser/operators 1`] = `
Object {
  "node": "Combine",
}
`;

exports[`parser/pathTermination: parser/pathTermination 1`] = `
Object {
  "args": Array [
    Array [
      "x",
      Array [
        " ",
      ],
    ],
    Object {
      "asText": false,
      "hash": null,
      "path": "./example",
      "type": "file",
    },
    Object {
      "asText": false,
      "hash": null,
      "path": "./example",
      "type": "file",
    },
  ],
  "type": "Lambda",
}
`;

exports[`parser/paths: parser/paths 1`] = `
Array [
  Array [
    "[",
    Array [
      " ",
    ],
  ],
  Object {
    "asText": false,
    "hash": null,
    "path": Array [
      "/",
      "a",
      Array [
        "b",
        "s",
        "o",
        "l",
        "u",
        "t",
        "e",
        "/",
        "p",
        "a",
        "t",
        "h",
      ],
    ],
    "type": "file",
  },
  Array [
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Object {
        "asText": false,
        "hash": null,
        "path": "./relative/path",
        "type": "file",
      },
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Object {
        "asText": false,
        "hash": null,
        "path": Array [
          "~/",
          Array [
            "h",
            "o",
            "m",
            "e",
            "/",
            "a",
            "n",
            "c",
            "h",
            "o",
            "r",
            "e",
            "d",
            "/",
            "p",
            "a",
            "t",
            "h",
          ],
        ],
        "type": "file",
      },
    ],
    Array [
      Array [
        ",",
        Array [
          " ",
        ],
      ],
      Object {
        "asText": false,
        "hash": null,
        "path": Array [
          "/",
          "i",
          Array [
            "p",
            "f",
            "s",
            "/",
            "Q",
            "m",
            "Q",
            "8",
            "w",
            "5",
            "P",
            "L",
            "c",
            "s",
            "N",
            "z",
            "5",
            "6",
            "d",
            "M",
            "v",
            "R",
            "t",
            "q",
            "5",
            "4",
            "v",
            "b",
            "u",
            "P",
            "e",
            "9",
            "c",
            "N",
            "n",
            "C",
            "C",
            "U",
            "X",
            "A",
            "Q",
            "p",
            "6",
            "x",
            "L",
            "c",
            "6",
            "C",
            "c",
            "x",
            "/",
            "P",
            "r",
            "e",
            "l",
            "u",
            "d",
            "e",
          ],
        ],
        "type": "file",
      },
    ],
  ],
  Array [
    "]",
    Array [
      "
",
    ],
  ],
]
`;

exports[`parser/quotedLabel: parser/quotedLabel 1`] = `
Object {
  "args": Array [
    Object {
      "example1, ": Object {
        "args": Array [
          Array [
            Array [
              "\`",
              Array [
                "l",
                "e",
                "t",
              ],
              "\`",
            ],
            Array [
              " ",
            ],
          ],
          null,
          Object {
            "integer": "1",
            "node": "IntegerLit",
          },
          Object {
            "args": Array [
              Array [
                Array [
                  Array [
                    "\`",
                    Array [
                      "l",
                      "e",
                      "t",
                    ],
                    "\`",
                  ],
                  Array [],
                ],
                null,
                Array [],
              ],
            ],
            "type": "Var",
          },
        ],
        "type": "Let",
      },
    },
  ],
  "type": "Record",
}
`;

exports[`parser/record: parser/record 1`] = `
Object {
  "expr": Object {
    "args": Array [
      Object {
        "foo, ": Object {
          "integer": "1",
          "node": "IntegerLit",
        },
      },
    ],
    "type": "Record",
  },
  "node": "annotate",
  "type": Object {
    "args": Array [
      Object {
        "foo, ": Array [
          ":",
          Array [
            " ",
          ],
        ],
      },
    ],
    "type": "Record",
  },
}
`;

exports[`parser/reservedPrefix: parser/reservedPrefix 1`] = `
Object {
  "args": Array [
    Array [
      "TypeSynonym",
      Array [
        " ",
      ],
    ],
    null,
    Object {
      "node": "Integer",
    },
    Object {
      "expr": Object {
        "integer": "1",
        "node": "IntegerLit",
      },
      "node": "annotate",
      "type": Object {
        "args": Array [
          Array [
            Array [
              "TypeSynonym",
              Array [
                "
",
              ],
            ],
            null,
            Array [],
          ],
        ],
        "type": "Var",
      },
    },
  ],
  "type": "Let",
}
`;

exports[`parser/singleQuotedString: parser/singleQuotedString 1`] = `
Array [
  Array [
    "''",
    Array [
      "
",
      Array [
        "A",
        Array [
          "B",
          Array [
            "C",
            Array [
              "
",
              Array [
                "D",
                Array [
                  "E",
                  Array [
                    "F",
                    Array [
                      "
",
                      "''",
                    ],
                  ],
                ],
              ],
            ],
          ],
        ],
      ],
    ],
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/unicodeComment: parser/unicodeComment 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/unicodeDoubleQuotedString: parser/unicodeDoubleQuotedString 1`] = `
Array [
  Array [
    "\\"",
    Array [
      "∀",
      "(",
      "a",
      " ",
      ":",
      " ",
      "T",
      "y",
      "p",
      "e",
      ")",
      " ",
      "→",
      " ",
      "a",
    ],
    "\\"",
  ],
  Array [
    "
",
  ],
]
`;

exports[`parser/union: parser/union 1`] = `
Object {
  "expr": Array [
    Array [
      "<",
      Array [
        " ",
      ],
    ],
    Array [
      Array [
        "A",
        Array [
          " ",
        ],
      ],
      Array [
        Array [
          ":",
          Array [
            " ",
          ],
        ],
        Object {
          "args": Array [
            "",
          ],
          "type": "Record",
        },
        Array [
          Array [
            "|",
            Array [
              " ",
            ],
          ],
          Array [
            Array [
              "B",
              Array [
                " ",
              ],
            ],
            Array [
              Array [
                "=",
                Array [
                  " ",
                ],
              ],
              Object {
                "args": Array [
                  Object {},
                ],
                "type": "Record",
              },
              Array [
                Array [
                  Array [
                    "|",
                    Array [
                      " ",
                    ],
                  ],
                  Array [
                    "C",
                    Array [
                      " ",
                    ],
                  ],
                  Array [
                    ":",
                    Array [
                      " ",
                    ],
                  ],
                  Object {
                    "args": Array [
                      "",
                    ],
                    "type": "Record",
                  },
                ],
              ],
            ],
          ],
        ],
      ],
    ],
    Array [
      ">",
      Array [
        " ",
      ],
    ],
  ],
  "node": "annotate",
  "type": Array [
    Array [
      "<",
      Array [
        " ",
      ],
    ],
    Array [
      Array [
        "A",
        Array [
          " ",
        ],
      ],
      Array [
        Array [
          ":",
          Array [
            " ",
          ],
        ],
        Object {
          "args": Array [
            "",
          ],
          "type": "Record",
        },
        Array [
          Array [
            "|",
            Array [
              " ",
            ],
          ],
          Array [
            Array [
              "B",
              Array [
                " ",
              ],
            ],
            Array [
              Array [
                ":",
                Array [
                  " ",
                ],
              ],
              Object {
                "args": Array [
                  "",
                ],
                "type": "Record",
              },
              Array [
                Array [
                  "|",
                  Array [
                    " ",
                  ],
                ],
                Array [
                  Array [
                    "C",
                    Array [
                      " ",
                    ],
                  ],
                  Array [
                    Array [
                      ":",
                      Array [
                        " ",
                      ],
                    ],
                    Object {
                      "args": Array [
                        "",
                      ],
                      "type": "Record",
                    },
                    "",
                  ],
                ],
              ],
            ],
          ],
        ],
      ],
    ],
    Array [
      ">",
      Array [
        "
",
      ],
    ],
  ],
}
`;

exports[`parser/whitespace: parser/whitespace 1`] = `
Object {
  "integer": "1",
  "node": "IntegerLit",
}
`;

exports[`parser/whitespaceBuffet: parser/whitespaceBuffet 1`] = `
Object {
  "node": "Natural/even",
}
`;
